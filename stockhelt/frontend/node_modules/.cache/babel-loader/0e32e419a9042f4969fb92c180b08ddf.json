{"remainingRequest":"/home/tmst/an3sem2/sd/assignment-3-luaRRaul/Assignments/Assignment 3/stockhelt/frontend/node_modules/babel-loader/lib/index.js!/home/tmst/an3sem2/sd/assignment-3-luaRRaul/Assignments/Assignment 3/stockhelt/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/tmst/an3sem2/sd/assignment-3-luaRRaul/Assignments/Assignment 3/stockhelt/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/tmst/an3sem2/sd/assignment-3-luaRRaul/Assignments/Assignment 3/stockhelt/frontend/src/components/PatientDialog.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/tmst/an3sem2/sd/assignment-3-luaRRaul/Assignments/Assignment 3/stockhelt/frontend/src/components/PatientDialog.vue","mtime":1619897801230},{"path":"/home/tmst/an3sem2/sd/assignment-3-luaRRaul/Assignments/Assignment 3/stockhelt/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/tmst/an3sem2/sd/assignment-3-luaRRaul/Assignments/Assignment 3/stockhelt/frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/tmst/an3sem2/sd/assignment-3-luaRRaul/Assignments/Assignment 3/stockhelt/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/tmst/an3sem2/sd/assignment-3-luaRRaul/Assignments/Assignment 3/stockhelt/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9ob21lL3Rtc3QvYW4zc2VtMi9zZC9hc3NpZ25tZW50LTMtbHVhUlJhdWwvQXNzaWdubWVudHMvQXNzaWdubWVudCAzL3N0b2NraGVsdC9mcm9udGVuZC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IGFwaSBmcm9tICIuLi9hcGkiOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIlBhdGllbnREaWFsb2ciLAogIHByb3BzOiB7CiAgICBwYXRpZW50OiBPYmplY3QsCiAgICBvcGVuZWQ6IEJvb2xlYW4KICB9LAogIG1ldGhvZHM6IHsKICAgIGRlbGV0OiBmdW5jdGlvbiBkZWxldCgpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIGFwaS5wYXRpZW50cy5kZWxldGUoewogICAgICAgIGlkOiB0aGlzLnBhdGllbnQuaWQKICAgICAgfSkudGhlbihmdW5jdGlvbiAoKSB7CiAgICAgICAgcmV0dXJuIF90aGlzLiRlbWl0KCJyZWZyZXNoIik7CiAgICAgIH0pOwogICAgfSwKICAgIHBlcnNpc3Q6IGZ1bmN0aW9uIHBlcnNpc3QoKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgaWYgKHRoaXMuaXNOZXcpIHsKICAgICAgICBhcGkucGF0aWVudHMuY3JlYXRlKHsKICAgICAgICAgIGZpcnN0TmFtZTogdGhpcy5wYXRpZW50LmZpcnN0TmFtZSwKICAgICAgICAgIGxhc3ROYW1lOiB0aGlzLnBhdGllbnQubGFzdE5hbWUsCiAgICAgICAgICBlbWFpbDogdGhpcy5wYXRpZW50LmVtYWlsLAogICAgICAgICAgY25wOiB0aGlzLnBhdGllbnQuY25wLAogICAgICAgICAgZGF0ZU9mQmlydGg6IHRoaXMucGF0aWVudC5kYXRlT2ZCaXJ0aCwKICAgICAgICAgIGFkZHJlc3M6IHRoaXMucGF0aWVudC5hZGRyZXNzCiAgICAgICAgfSkudGhlbihmdW5jdGlvbiAoKSB7CiAgICAgICAgICByZXR1cm4gX3RoaXMyLiRlbWl0KCJyZWZyZXNoIik7CiAgICAgICAgfSk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgYXBpLnBhdGllbnRzLmVkaXQoewogICAgICAgICAgaWQ6IHRoaXMucGF0aWVudC5pZCwKICAgICAgICAgIGZpcnN0TmFtZTogdGhpcy5wYXRpZW50LmZpcnN0TmFtZSwKICAgICAgICAgIGxhc3ROYW1lOiB0aGlzLnBhdGllbnQubGFzdE5hbWUsCiAgICAgICAgICBlbWFpbDogdGhpcy5wYXRpZW50LmVtYWlsLAogICAgICAgICAgY25wOiB0aGlzLnBhdGllbnQuY25wLAogICAgICAgICAgZGF0ZU9mQmlydGg6IHRoaXMucGF0aWVudC5kYXRlT2ZCaXJ0aCwKICAgICAgICAgIGFkZHJlc3M6IHRoaXMucGF0aWVudC5hZGRyZXNzCiAgICAgICAgfSkudGhlbihmdW5jdGlvbiAoKSB7CiAgICAgICAgICByZXR1cm4gX3RoaXMyLiRlbWl0KCJyZWZyZXNoIik7CiAgICAgICAgfSk7CiAgICAgIH0KICAgIH0KICB9LAogIGNvbXB1dGVkOiB7CiAgICBpc05ldzogZnVuY3Rpb24gaXNOZXcoKSB7CiAgICAgIHJldHVybiAhdGhpcy5wYXRpZW50LmlkOwogICAgfQogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHJvbGVzOiBbIlNlY3JldGFyeSIsICJEb2N0b3IiLCAiQWRtaW4iXQogICAgfTsKICB9LAogIHdhdGNoOiB7CiAgICBvcGVuZWQ6IGZ1bmN0aW9uICgpIHsKICAgICAgdmFyIF9vcGVuZWQgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUobmV3VmFsLCBvbGRWYWwpIHsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBpZiAoIShuZXdWYWwgJiYgIW9sZFZhbCkpIHsKICAgICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDQ7CiAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAzOwogICAgICAgICAgICAgICAgcmV0dXJuIGFwaS5wYXRpZW50cy5nZXRGdWxsUGF0aWVudCh7CiAgICAgICAgICAgICAgICAgIGlkOiB0aGlzLnBhdGllbnQuaWQKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgICB0aGlzLnBhdGllbnQgPSBfY29udGV4dC5zZW50OwoKICAgICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlLCB0aGlzKTsKICAgICAgfSkpOwoKICAgICAgZnVuY3Rpb24gb3BlbmVkKF94LCBfeDIpIHsKICAgICAgICByZXR1cm4gX29wZW5lZC5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICB9CgogICAgICByZXR1cm4gb3BlbmVkOwogICAgfSgpCiAgfQp9Ow=="},{"version":3,"sources":["PatientDialog.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCA,OAAA,GAAA,MAAA,QAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,eADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,OAAA,EAAA,MADA;AAEA,IAAA,MAAA,EAAA;AAFA,GAFA;AAMA,EAAA,OAAA,EAAA;AACA,IAAA,KADA,mBACA;AAAA;;AACA,MAAA,GAAA,CAAA,QAAA,CAAA,MAAA,CAAA;AACA,QAAA,EAAA,EAAA,KAAA,OAAA,CAAA;AADA,OAAA,EAEA,IAFA,CAEA;AAAA,eAAA,KAAA,CAAA,KAAA,CAAA,SAAA,CAAA;AAAA,OAFA;AAGA,KALA;AAMA,IAAA,OANA,qBAMA;AAAA;;AACA,UAAA,KAAA,KAAA,EAAA;AACA,QAAA,GAAA,CAAA,QAAA,CACA,MADA,CACA;AACA,UAAA,SAAA,EAAA,KAAA,OAAA,CAAA,SADA;AAEA,UAAA,QAAA,EAAA,KAAA,OAAA,CAAA,QAFA;AAGA,UAAA,KAAA,EAAA,KAAA,OAAA,CAAA,KAHA;AAIA,UAAA,GAAA,EAAA,KAAA,OAAA,CAAA,GAJA;AAKA,UAAA,WAAA,EAAA,KAAA,OAAA,CAAA,WALA;AAMA,UAAA,OAAA,EAAA,KAAA,OAAA,CAAA;AANA,SADA,EASA,IATA,CASA;AAAA,iBAAA,MAAA,CAAA,KAAA,CAAA,SAAA,CAAA;AAAA,SATA;AAUA,OAXA,MAWA;AACA,QAAA,GAAA,CAAA,QAAA,CACA,IADA,CACA;AACA,UAAA,EAAA,EAAA,KAAA,OAAA,CAAA,EADA;AAEA,UAAA,SAAA,EAAA,KAAA,OAAA,CAAA,SAFA;AAGA,UAAA,QAAA,EAAA,KAAA,OAAA,CAAA,QAHA;AAIA,UAAA,KAAA,EAAA,KAAA,OAAA,CAAA,KAJA;AAKA,UAAA,GAAA,EAAA,KAAA,OAAA,CAAA,GALA;AAMA,UAAA,WAAA,EAAA,KAAA,OAAA,CAAA,WANA;AAOA,UAAA,OAAA,EAAA,KAAA,OAAA,CAAA;AAPA,SADA,EAUA,IAVA,CAUA;AAAA,iBAAA,MAAA,CAAA,KAAA,CAAA,SAAA,CAAA;AAAA,SAVA;AAWA;AACA;AA/BA,GANA;AAuCA,EAAA,QAAA,EAAA;AACA,IAAA,KAAA,EAAA,iBAAA;AACA,aAAA,CAAA,KAAA,OAAA,CAAA,EAAA;AACA;AAHA,GAvCA;AA4CA,EAAA,IA5CA,kBA4CA;AACA,WAAA;AACA,MAAA,KAAA,EAAA,CAAA,WAAA,EAAA,QAAA,EAAA,OAAA;AADA,KAAA;AAGA,GAhDA;AAiDA,EAAA,KAAA,EAAA;AACA,IAAA,MAAA;AAAA,4EAAA,iBAAA,MAAA,EAAA,MAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA,MAAA,IAAA,CAAA,MADA;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAEA,GAAA,CAAA,QAAA,CAAA,cAAA,CAAA;AACA,kBAAA,EAAA,EAAA,KAAA,OAAA,CAAA;AADA,iBAAA,CAFA;;AAAA;AAEA,qBAAA,OAFA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AADA;AAjDA,CAAA","sourcesContent":["<template>\n  <v-dialog\n      transition=\"dialog-bottom-transition\"\n      max-width=\"600\"\n      :value=\"opened\"\n  >\n    <template>\n      <v-card>\n        <v-toolbar color=\"primary\" dark>\n          {{ isNew ? \"Create patient\" : \"Edit patient\" }}\n        </v-toolbar>\n        <v-form >\n          <v-text-field v-model=\"patient.firstName\" label=\"First Name\" />\n          <v-text-field v-model=\"patient.lastName\" label=\"Last Name\" />\n          <v-text-field v-model=\"patient.email\" label=\"Email\" />\n          <v-text-field v-model=\"patient.cnp\" label=\"CNP\" />\n          <v-text-field v-model=\"patient.dateOfBirth\" label=\"Date of Birth\" />\n          <v-text-field v-model=\"patient.address\" label=\"Address\" />\n        </v-form>\n        <v-card-actions>\n          <v-btn @click=\"persist\">\n            {{ isNew ? \"Create\" : \"Save\" }}\n          </v-btn>\n          <v-btn @click=\"delet\">\n            Delete\n          </v-btn>\n        </v-card-actions>\n      </v-card>\n    </template>\n  </v-dialog>\n</template>\n\n<script>\nimport api from \"../api\";\nexport default {\n  name: \"PatientDialog\",\n  props: {\n    patient: Object,\n    opened: Boolean,\n  },\n  methods: {\n    delet(){\n      api.patients.delete({\n        id: this.patient.id,\n      }).then(() => this.$emit(\"refresh\"));\n    },\n    persist() {\n      if (this.isNew) {\n        api.patients\n            .create({\n              firstName: this.patient.firstName,\n              lastName: this.patient.lastName,\n              email: this.patient.email,\n              cnp: this.patient.cnp,\n              dateOfBirth: this.patient.dateOfBirth,\n              address: this.patient.address,\n            })\n            .then(() => this.$emit(\"refresh\"));\n      } else {\n        api.patients\n            .edit({\n              id: this.patient.id,\n              firstName: this.patient.firstName,\n              lastName: this.patient.lastName,\n              email: this.patient.email,\n              cnp: this.patient.cnp,\n              dateOfBirth: this.patient.dateOfBirth,\n              address: this.patient.address,\n            })\n            .then(() => this.$emit(\"refresh\"));\n      }\n    },\n  },\n  computed: {\n    isNew: function () {\n      return !this.patient.id;\n    },\n  },\n  data() {\n    return {\n      roles: [\"Secretary\", \"Doctor\", \"Admin\"],\n    }\n  },\n  watch:{\n    opened: async function (newVal, oldVal) {\n      if (newVal && !oldVal)\n        this.patient = await api.patients.getFullPatient({\n          id: this.patient.id\n        });\n    }\n  }\n};\n</script>\n\n<style scoped></style>\n"],"sourceRoot":"src/components"}]}