{"remainingRequest":"/home/tmst/an3sem2/sd/final-project-luaRRaul/stockhelt/frontend/node_modules/babel-loader/lib/index.js!/home/tmst/an3sem2/sd/final-project-luaRRaul/stockhelt/frontend/node_modules/eslint-loader/index.js??ref--13-0!/home/tmst/an3sem2/sd/final-project-luaRRaul/stockhelt/frontend/src/api/services/users.js","dependencies":[{"path":"/home/tmst/an3sem2/sd/final-project-luaRRaul/stockhelt/frontend/src/api/services/users.js","mtime":1622619289870},{"path":"/home/tmst/an3sem2/sd/final-project-luaRRaul/stockhelt/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/tmst/an3sem2/sd/final-project-luaRRaul/stockhelt/frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/tmst/an3sem2/sd/final-project-luaRRaul/stockhelt/frontend/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IGF1dGhIZWFkZXIsIHsgQkFTRV9VUkwsIEhUVFAgfSBmcm9tICIuLi9odHRwIjsKaW1wb3J0IHsgc2F2ZUZpbGUgfSBmcm9tICJAL2FwaS91dGlscyI7CmV4cG9ydCBkZWZhdWx0IHsKICBhbGxVc2VyczogZnVuY3Rpb24gYWxsVXNlcnMoKSB7CiAgICByZXR1cm4gSFRUUC5nZXQoQkFTRV9VUkwgKyAiL3VzZXJzIiwgewogICAgICBoZWFkZXJzOiBhdXRoSGVhZGVyKCkKICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgIHJldHVybiByZXNwb25zZS5kYXRhOwogICAgfSk7CiAgfSwKICBhbGxEb2N0b3JzOiBmdW5jdGlvbiBhbGxEb2N0b3JzKCkgewogICAgcmV0dXJuIEhUVFAuZ2V0KEJBU0VfVVJMICsgIi91c2Vycy9kb2N0b3JzIiwgewogICAgICBoZWFkZXJzOiBhdXRoSGVhZGVyKCkKICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgIHJldHVybiByZXNwb25zZS5kYXRhOwogICAgfSk7CiAgfSwKICB0ZXN0RW1haWw6IGZ1bmN0aW9uIHRlc3RFbWFpbCh1c2VyKSB7CiAgICByZXR1cm4gSFRUUC5nZXQoQkFTRV9VUkwgKyAiL3NlbmRlbWFpbC8iLmNvbmNhdCh1c2VyLmlkKSwgewogICAgICBoZWFkZXJzOiBhdXRoSGVhZGVyKCkKICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgIHJldHVybiByZXNwb25zZS5kYXRhOwogICAgfSk7CiAgfSwKICBhbGxQYXRpZW50czogZnVuY3Rpb24gYWxsUGF0aWVudHMoKSB7CiAgICByZXR1cm4gSFRUUC5nZXQoQkFTRV9VUkwgKyAiL3VzZXJzL3BhdGllbnRzIiwgewogICAgICBoZWFkZXJzOiBhdXRoSGVhZGVyKCkKICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgIHJldHVybiByZXNwb25zZS5kYXRhOwogICAgfSk7CiAgfSwKICBjcmVhdGU6IGZ1bmN0aW9uIGNyZWF0ZSh1c2VyKSB7CiAgICByZXR1cm4gSFRUUC5wb3N0KEJBU0VfVVJMICsgIi91c2VycyIsIHVzZXIsIHsKICAgICAgaGVhZGVyczogYXV0aEhlYWRlcigpCiAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICByZXR1cm4gcmVzcG9uc2UuZGF0YTsKICAgIH0pOwogIH0sCiAgZWRpdDogZnVuY3Rpb24gZWRpdCh1c2VyKSB7CiAgICByZXR1cm4gSFRUUC5wdXQoQkFTRV9VUkwgKyAiL3VzZXJzLyIuY29uY2F0KHVzZXIuaWQpLCB1c2VyLCB7CiAgICAgIGhlYWRlcnM6IGF1dGhIZWFkZXIoKQogICAgfSkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgcmV0dXJuIHJlc3BvbnNlLmRhdGE7CiAgICB9KTsKICB9LAogIGRlbGV0ZTogZnVuY3Rpb24gX2RlbGV0ZSh1c2VyKSB7CiAgICByZXR1cm4gSFRUUC5kZWxldGUoQkFTRV9VUkwgKyAiL3VzZXJzLyIuY29uY2F0KHVzZXIuaWQpLCB7CiAgICAgIGhlYWRlcnM6IGF1dGhIZWFkZXIoKQogICAgfSkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgcmV0dXJuIHJlc3BvbnNlLmRhdGE7CiAgICB9KTsKICB9LAogIGdlbmVyYXRlQ1NWOiBmdW5jdGlvbiBnZW5lcmF0ZUNTVigpIHsKICAgIHJldHVybiBIVFRQLmdldChCQVNFX1VSTCArICIvdXNlcnMvZXhwb3J0L0NTViIsIHsKICAgICAgcmVzcG9uc2VUeXBlOiAiYXJyYXlidWZmZXIiLAogICAgICBoZWFkZXJzOiBhdXRoSGVhZGVyKCkKICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgIHNhdmVGaWxlKCJDU1YiLCByZXNwb25zZSk7CiAgICB9KTsKICB9LAogIGdlbmVyYXRlUERGOiBmdW5jdGlvbiBnZW5lcmF0ZVBERigpIHsKICAgIHJldHVybiBIVFRQLmdldChCQVNFX1VSTCArICIvdXNlcnMvZXhwb3J0L1BERiIsIHsKICAgICAgcmVzcG9uc2VUeXBlOiAiYXJyYXlidWZmZXIiLAogICAgICBoZWFkZXJzOiBhdXRoSGVhZGVyKCkKICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgIHNhdmVGaWxlKCJQREYiLCByZXNwb25zZSk7CiAgICB9KTsKICB9Cn07"},{"version":3,"sources":["/home/tmst/an3sem2/sd/final-project-luaRRaul/stockhelt/frontend/src/api/services/users.js"],"names":["authHeader","BASE_URL","HTTP","saveFile","allUsers","get","headers","then","response","data","allDoctors","testEmail","user","id","allPatients","create","post","edit","put","delete","generateCSV","responseType","generatePDF"],"mappings":"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","sourcesContent":["import authHeader, { BASE_URL, HTTP } from \"../http\";\nimport {saveFile} from \"@/api/utils\";\n\nexport default {\n  allUsers() {\n    return HTTP.get(BASE_URL + \"/users\", { headers: authHeader() }).then(\n      (response) => {\n        return response.data;\n      }\n    );\n  },\n    allDoctors() {\n        return HTTP.get(BASE_URL + \"/users/doctors\", { headers: authHeader() }).then(\n            (response) => {\n                return response.data;\n            }\n        );\n    },\n    testEmail(user) {\n        return HTTP.get(BASE_URL + `/sendemail/${user.id}`, { headers: authHeader() }).then(\n            (response) => {\n                return response.data;\n            }\n        );\n    },\n    allPatients() {\n        return HTTP.get(BASE_URL + \"/users/patients\", { headers: authHeader() }).then(\n            (response) => {\n                return response.data;\n            }\n        );\n    },\n  create(user) {\n    return HTTP.post(BASE_URL + \"/users\", user, { headers: authHeader() }).then(\n        (response) => {\n          return response.data;\n        }\n    );\n  },\n  edit(user) {\n    return HTTP.put(BASE_URL + `/users/${user.id}`, user, { headers: authHeader() }).then(\n        (response) => {\n          return response.data;\n        }\n    );\n  },\n    delete(user) {\n        return HTTP.delete(BASE_URL + `/users/${user.id}`, { headers: authHeader() }).then(\n            (response) => {\n                return response.data;\n            }\n        );\n    },\n    generateCSV() {\n        return HTTP.get(BASE_URL + \"/users/export/CSV\", { responseType:\"arraybuffer\", headers: authHeader() }).then(\n            (response) => {\n                saveFile(\"CSV\", response);\n            }\n        );\n    },\n    generatePDF() {\n        return HTTP.get(BASE_URL + \"/users/export/PDF\", { responseType:\"arraybuffer\", headers: authHeader() }).then(\n            (response) => {\n                saveFile(\"PDF\",response);\n            }\n        );\n    },\n};\n"]}]}