{"remainingRequest":"/home/tmst/an3sem2/sd/final-project-luaRRaul/stockhelt/frontend/node_modules/babel-loader/lib/index.js!/home/tmst/an3sem2/sd/final-project-luaRRaul/stockhelt/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/tmst/an3sem2/sd/final-project-luaRRaul/stockhelt/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/tmst/an3sem2/sd/final-project-luaRRaul/stockhelt/frontend/src/components/DoctorTextDialog.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/tmst/an3sem2/sd/final-project-luaRRaul/stockhelt/frontend/src/components/DoctorTextDialog.vue","mtime":1622567563940},{"path":"/home/tmst/an3sem2/sd/final-project-luaRRaul/stockhelt/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/tmst/an3sem2/sd/final-project-luaRRaul/stockhelt/frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/tmst/an3sem2/sd/final-project-luaRRaul/stockhelt/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/tmst/an3sem2/sd/final-project-luaRRaul/stockhelt/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9ob21lL3Rtc3QvYW4zc2VtMi9zZC9maW5hbC1wcm9qZWN0LWx1YVJSYXVsL3N0b2NraGVsdC9mcm9udGVuZC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IFNvY2tKUyBmcm9tICJzb2NranMtY2xpZW50IjsKaW1wb3J0IFN0b21wIGZyb20gIndlYnN0b21wLWNsaWVudCI7CmltcG9ydCBDaGF0Q29udGFpbmVyIGZyb20gIkAvY29tcG9uZW50cy9DaGF0Q29udGFpbmVyIjsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJEb2N0b3JUZXh0RGlhbG9nIiwKICBjb21wb25lbnRzOiB7CiAgICBDaGF0Q29udGFpbmVyOiBDaGF0Q29udGFpbmVyCiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgc2VuZF9tZXNzYWdlOiBudWxsLAogICAgICBjb25uZWN0ZWQ6IGZhbHNlIC8vIHJvbGVzOiBbIlNlY3JldGFyeSIsICJEb2N0b3IiLCAiQWRtaW4iXSwKCiAgICB9OwogIH0sCiAgcHJvcHM6IHsKICAgIHBhdGllbnQ6IE9iamVjdCwKICAgIG9wZW5lZDogQm9vbGVhbgogIH0sCiAgbWV0aG9kczogewogICAgc2VuZDogZnVuY3Rpb24gc2VuZCgpIHsKICAgICAgY29uc29sZS5sb2coIlNlbmQgbWVzc2FnZToiICsgdGhpcy5zZW5kX21lc3NhZ2UpOwoKICAgICAgaWYgKHRoaXMuc3RvbXBDbGllbnQgJiYgdGhpcy5zdG9tcENsaWVudC5jb25uZWN0ZWQpIHsKICAgICAgICB0aGlzLnNlbmRfbWVzc2FnZSA9IHsKICAgICAgICAgIHR5cGU6ICJNU0ciLAogICAgICAgICAgY29udGVudDogIkhlbGxvdyBXb3JsZCEiLAogICAgICAgICAgc2VuZGVyOiB0aGlzLiRzdG9yZS5zdGF0ZS5hdXRoLnVzZXIuaWQKICAgICAgICB9OwogICAgICAgIGNvbnNvbGUubG9nKEpTT04uc3RyaW5naWZ5KHRoaXMuc2VuZF9tZXNzYWdlKSk7CiAgICAgICAgdGhpcy5zdG9tcENsaWVudC5zZW5kKCIvYXBpL2NoYXQvdG9waWMvIiArIHRoaXMucGF0aWVudC5pZCwgSlNPTi5zdHJpbmdpZnkodGhpcy5zZW5kX21lc3NhZ2UpLCB7fSk7CiAgICAgIH0KICAgIH0sCiAgICBjb25uZWN0OiBmdW5jdGlvbiBjb25uZWN0KCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgdGhpcy5zb2NrZXQgPSBuZXcgU29ja0pTKCJodHRwOi8vbG9jYWxob3N0OjgwODgvYXBpL215LXdlYnNvY2tldCIpOwogICAgICB0aGlzLnN0b21wQ2xpZW50ID0gU3RvbXAub3Zlcih0aGlzLnNvY2tldCk7CiAgICAgIHRoaXMuc3RvbXBDbGllbnQuY29ubmVjdCh7fSwgZnVuY3Rpb24gKGZyYW1lKSB7CiAgICAgICAgX3RoaXMuY29ubmVjdGVkID0gdHJ1ZTsKICAgICAgICBjb25zb2xlLmxvZyhmcmFtZSk7CgogICAgICAgIF90aGlzLnN0b21wQ2xpZW50LnN1YnNjcmliZSgiL2FwaS90b3BpYy9tZXNzYWdlcy8iICsgX3RoaXMuJHN0b3JlLnN0YXRlLmF1dGgudXNlci5pZCwgZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgICBjb25zb2xlLmxvZyhyZXNwb25zZSk7CiAgICAgICAgICB2YXIgZGF0YSA9IEpTT04ucGFyc2UocmVzcG9uc2UuYm9keSk7CiAgICAgICAgICBjb25zb2xlLmxvZyhkYXRhKTsKICAgICAgICB9KTsKICAgICAgfSwgZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgICAgY29uc29sZS5sb2coZXJyb3IpOwogICAgICAgIF90aGlzLmNvbm5lY3RlZCA9IGZhbHNlOwogICAgICB9KTsKICAgIH0KICB9LAogIGNvbXB1dGVkOiB7CiAgICBpc05ldzogZnVuY3Rpb24gaXNOZXcoKSB7CiAgICAgIHJldHVybiAhdGhpcy5wYXRpZW50LmlkOwogICAgfQogIH0sCiAgd2F0Y2g6IHsKICAgIG9wZW5lZDogZnVuY3Rpb24gKCkgewogICAgICB2YXIgX29wZW5lZCA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZShuZXdWYWwsIG9sZFZhbCkgewogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIGlmIChuZXdWYWwgJiYgIW9sZFZhbCkgewogICAgICAgICAgICAgICAgICB0aGlzLmNvbm5lY3QoKTsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgY2FzZSAxOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSwgdGhpcyk7CiAgICAgIH0pKTsKCiAgICAgIGZ1bmN0aW9uIG9wZW5lZChfeCwgX3gyKSB7CiAgICAgICAgcmV0dXJuIF9vcGVuZWQuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgICAgfQoKICAgICAgcmV0dXJuIG9wZW5lZDsKICAgIH0oKQogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgIHRoaXMuJHJvb3QuJG9uKCdkb2N0b3JTZW5kTWVzc2FnZScsIGZ1bmN0aW9uIChtZXNzYWcpIHsKICAgICAgLy8geW91ciBjb2RlIGdvZXMgaGVyZQogICAgICBfdGhpczIuc2VuZChtZXNzYWcpOwogICAgfSk7CiAgfQp9Ow=="},{"version":3,"sources":["DoctorTextDialog.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA,OAAA,MAAA,MAAA,eAAA;AACA,OAAA,KAAA,MAAA,iBAAA;AACA,OAAA,aAAA,MAAA,4BAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,kBADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,aAAA,EAAA;AADA,GAFA;AAKA,EAAA,IALA,kBAKA;AACA,WAAA;AACA,MAAA,YAAA,EAAA,IADA;AAEA,MAAA,SAAA,EAAA,KAFA,CAGA;;AAHA,KAAA;AAKA,GAXA;AAYA,EAAA,KAAA,EAAA;AACA,IAAA,OAAA,EAAA,MADA;AAEA,IAAA,MAAA,EAAA;AAFA,GAZA;AAgBA,EAAA,OAAA,EAAA;AACA,IAAA,IADA,kBACA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,kBAAA,KAAA,YAAA;;AACA,UAAA,KAAA,WAAA,IAAA,KAAA,WAAA,CAAA,SAAA,EAAA;AACA,aAAA,YAAA,GAAA;AACA,UAAA,IAAA,EAAA,KADA;AAEA,UAAA,OAAA,EAAA,eAFA;AAGA,UAAA,MAAA,EAAA,KAAA,MAAA,CAAA,KAAA,CAAA,IAAA,CAAA,IAAA,CAAA;AAHA,SAAA;AAKA,QAAA,OAAA,CAAA,GAAA,CAAA,IAAA,CAAA,SAAA,CAAA,KAAA,YAAA,CAAA;AACA,aAAA,WAAA,CAAA,IAAA,CAAA,qBAAA,KAAA,OAAA,CAAA,EAAA,EAAA,IAAA,CAAA,SAAA,CAAA,KAAA,YAAA,CAAA,EAAA,EAAA;AACA;AACA,KAZA;AAaA,IAAA,OAbA,qBAaA;AAAA;;AACA,WAAA,MAAA,GAAA,IAAA,MAAA,CAAA,wCAAA,CAAA;AACA,WAAA,WAAA,GAAA,KAAA,CAAA,IAAA,CAAA,KAAA,MAAA,CAAA;AACA,WAAA,WAAA,CAAA,OAAA,CACA,EADA,EAEA,UAAA,KAAA,EAAA;AACA,QAAA,KAAA,CAAA,SAAA,GAAA,IAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,KAAA;;AACA,QAAA,KAAA,CAAA,WAAA,CAAA,SAAA,CAAA,yBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,CAAA,IAAA,CAAA,IAAA,CAAA,EAAA,EAAA,UAAA,QAAA,EAAA;AACA,UAAA,OAAA,CAAA,GAAA,CAAA,QAAA;AACA,cAAA,IAAA,GAAA,IAAA,CAAA,KAAA,CAAA,QAAA,CAAA,IAAA,CAAA;AACA,UAAA,OAAA,CAAA,GAAA,CAAA,IAAA;AACA,SAJA;AAKA,OAVA,EAWA,UAAA,KAAA,EAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,KAAA;AACA,QAAA,KAAA,CAAA,SAAA,GAAA,KAAA;AACA,OAdA;AAgBA;AAhCA,GAhBA;AAkDA,EAAA,QAAA,EAAA;AACA,IAAA,KAAA,EAAA,iBAAA;AACA,aAAA,CAAA,KAAA,OAAA,CAAA,EAAA;AACA;AAHA,GAlDA;AAuDA,EAAA,KAAA,EAAA;AACA,IAAA,MAAA;AAAA,4EAAA,iBAAA,MAAA,EAAA,MAAA;AAAA;AAAA;AAAA;AAAA;AACA,oBAAA,MAAA,IAAA,CAAA,MAAA,EAAA;AACA,uBAAA,OAAA;AACA;;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AADA,GAvDA;AA8DA,EAAA,OA9DA,qBA8DA;AAAA;;AACA,SAAA,KAAA,CAAA,GAAA,CAAA,mBAAA,EAAA,UAAA,MAAA,EAAA;AACA;AACA,MAAA,MAAA,CAAA,IAAA,CAAA,MAAA;AACA,KAHA;AAIA;AAnEA,CAAA","sourcesContent":["<template>\n  <v-dialog\n      transition=\"dialog-bottom-transition\"\n      max-width=\"600\"\n      :value=\"opened\"\n  >\n    <template>\n      <div class=\"message-input\">\n        <textarea\n            ref=\"messageInput\"\n            placeholder=\"message...\"\n            maxlength=\"20000\"\n            @keydown.enter=\"submitMessage\"\n        ></textarea>\n      </div>\n    </template>\n\n\n    <template>\n\n      <v-btn @click=\"send\">\n        Send\n      </v-btn>\n    </template>\n  </v-dialog>\n</template>\n\n<script>\nimport SockJS from \"sockjs-client\";\nimport Stomp from \"webstomp-client\";\nimport ChatContainer from \"@/components/ChatContainer\";\n\nexport default {\n  name: \"DoctorTextDialog\",\n  components:{\n    ChatContainer\n  },\n  data(){\n    return {\n      send_message: null,\n      connected: false,\n      // roles: [\"Secretary\", \"Doctor\", \"Admin\"],\n    }\n  },\n  props: {\n    patient: Object,\n    opened: Boolean,\n  },\n  methods: {\n    send() {\n      console.log(\"Send message:\" + this.send_message);\n      if (this.stompClient && this.stompClient.connected) {\n        this.send_message = {\n          type : \"MSG\",\n          content: \"Hellow World!\",\n          sender: this.$store.state.auth.user.id\n        };\n        console.log(JSON.stringify(this.send_message));\n        this.stompClient.send(\"/api/chat/topic/\"+this.patient.id, JSON.stringify(this.send_message),{});\n      }\n    },\n    connect() {\n      this.socket = new SockJS(\"http://localhost:8088/api/my-websocket\");\n      this.stompClient = Stomp.over(this.socket);\n      this.stompClient.connect(\n          {},\n          frame => {\n            this.connected = true;\n            console.log(frame);\n            this.stompClient.subscribe(\"/api/topic/messages/\"+this.$store.state.auth.user.id,function (response){\n              console.log(response);\n              let data = JSON.parse(response.body);\n              console.log(data);\n            });\n          },\n          error => {\n            console.log(error);\n            this.connected = false;\n          }\n      );\n    },\n  },\n  computed: {\n    isNew: function () {\n      return !this.patient.id;\n    },\n  },\n  watch:{\n    opened: async function (newVal, oldVal) {\n      if (newVal && !oldVal) {\n        this.connect();\n      }\n    }\n  },\n  mounted() {\n    this.$root.$on('doctorSendMessage', (messag) => {\n      // your code goes here\n      this.send(messag)\n    })\n  }\n};\n</script>\n\n<style scoped></style>\n"],"sourceRoot":"src/components"}]}