{"remainingRequest":"/home/tmst/an3sem2/sd/final-project-luaRRaul/stockhelt/frontend/node_modules/babel-loader/lib/index.js!/home/tmst/an3sem2/sd/final-project-luaRRaul/stockhelt/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/tmst/an3sem2/sd/final-project-luaRRaul/stockhelt/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/tmst/an3sem2/sd/final-project-luaRRaul/stockhelt/frontend/src/components/PatientTextDialog.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/tmst/an3sem2/sd/final-project-luaRRaul/stockhelt/frontend/src/components/PatientTextDialog.vue","mtime":1622567563960},{"path":"/home/tmst/an3sem2/sd/final-project-luaRRaul/stockhelt/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/tmst/an3sem2/sd/final-project-luaRRaul/stockhelt/frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/tmst/an3sem2/sd/final-project-luaRRaul/stockhelt/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/tmst/an3sem2/sd/final-project-luaRRaul/stockhelt/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9ob21lL3Rtc3QvYW4zc2VtMi9zZC9maW5hbC1wcm9qZWN0LWx1YVJSYXVsL3N0b2NraGVsdC9mcm9udGVuZC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IFNvY2tKUyBmcm9tICJzb2NranMtY2xpZW50IjsKaW1wb3J0IFN0b21wIGZyb20gIndlYnN0b21wLWNsaWVudCI7CmltcG9ydCBDaGF0Q29udGFpbmVyIGZyb20gIkAvY29tcG9uZW50cy9DaGF0Q29udGFpbmVyIjsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJQYXRpZW50VGV4dERpYWxvZyIsCiAgY29tcG9uZW50czogewogICAgQ2hhdENvbnRhaW5lcjogQ2hhdENvbnRhaW5lcgogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHNlbmRfbWVzc2FnZTogbnVsbCwKICAgICAgY29ubmVjdGVkOiBmYWxzZQogICAgfTsKICB9LAogIHByb3BzOiB7CiAgICBkb2N0b3I6IE9iamVjdCwKICAgIG9wZW5lZDogQm9vbGVhbgogIH0sCiAgbWV0aG9kczogewogICAgc2VuZDogZnVuY3Rpb24gc2VuZChtZXNzYWcpIHsKICAgICAgY29uc29sZS5sb2coIlNlbmQgbWVzc2FnZToiICsgdGhpcy5zZW5kX21lc3NhZ2UpOwoKICAgICAgaWYgKHRoaXMuc3RvbXBDbGllbnQgJiYgdGhpcy5zdG9tcENsaWVudC5jb25uZWN0ZWQpIHsKICAgICAgICB0aGlzLnNlbmRfbWVzc2FnZSA9IHsKICAgICAgICAgIHR5cGU6ICJNU0ciLAogICAgICAgICAgY29udGVudDogbWVzc2FnLAogICAgICAgICAgc2VuZGVyOiB0aGlzLiRzdG9yZS5zdGF0ZS5hdXRoLnVzZXIuaWQKICAgICAgICB9OwogICAgICAgIGNvbnNvbGUubG9nKEpTT04uc3RyaW5naWZ5KHRoaXMuc2VuZF9tZXNzYWdlKSk7CiAgICAgICAgdGhpcy5zdG9tcENsaWVudC5zZW5kKCIvYXBpL2NoYXQvdG9waWMvIiArIHRoaXMuZG9jdG9yLmlkLCBKU09OLnN0cmluZ2lmeSh0aGlzLnNlbmRfbWVzc2FnZSksIHt9KTsKICAgICAgfQogICAgfSwKICAgIGNvbm5lY3Q6IGZ1bmN0aW9uIGNvbm5lY3QoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICB0aGlzLnNvY2tldCA9IG5ldyBTb2NrSlMoImh0dHA6Ly9sb2NhbGhvc3Q6ODA4OC9hcGkvbXktd2Vic29ja2V0Iik7CiAgICAgIHRoaXMuc3RvbXBDbGllbnQgPSBTdG9tcC5vdmVyKHRoaXMuc29ja2V0KTsKICAgICAgdGhpcy5zdG9tcENsaWVudC5jb25uZWN0KHt9LCBmdW5jdGlvbiAoZnJhbWUpIHsKICAgICAgICBfdGhpcy5jb25uZWN0ZWQgPSB0cnVlOwogICAgICAgIGNvbnNvbGUubG9nKGZyYW1lKTsKCiAgICAgICAgX3RoaXMuc3RvbXBDbGllbnQuc3Vic2NyaWJlKCIvYXBpL3RvcGljL21lc3NhZ2VzLyIgKyBfdGhpcy4kc3RvcmUuc3RhdGUuYXV0aC51c2VyLmlkLCBmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICAgIHZhciBkYXRhID0gSlNPTi5wYXJzZShyZXNwb25zZS5ib2R5KTsKICAgICAgICAgIHRoaXMuJHJvb3QuJGVtaXQoInBhdGllbnRSZWNlaXZlZE1lc3NhZ2UiLCBkYXRhKTsKICAgICAgICAgIGNvbnNvbGUubG9nKGRhdGEpOwogICAgICAgIH0pOwogICAgICB9LCBmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgICBjb25zb2xlLmxvZyhlcnJvcik7CiAgICAgICAgX3RoaXMuY29ubmVjdGVkID0gZmFsc2U7CiAgICAgIH0pOwogICAgfQogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIGlzTmV3OiBmdW5jdGlvbiBpc05ldygpIHsKICAgICAgcmV0dXJuICF0aGlzLmRvY3Rvci5pZDsKICAgIH0KICB9LAogIHdhdGNoOiB7CiAgICBvcGVuZWQ6IGZ1bmN0aW9uICgpIHsKICAgICAgdmFyIF9vcGVuZWQgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUobmV3VmFsLCBvbGRWYWwpIHsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBpZiAobmV3VmFsICYmICFvbGRWYWwpIHsKICAgICAgICAgICAgICAgICAgdGhpcy5jb25uZWN0KCk7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgIGNhc2UgMToKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUsIHRoaXMpOwogICAgICB9KSk7CgogICAgICBmdW5jdGlvbiBvcGVuZWQoX3gsIF94MikgewogICAgICAgIHJldHVybiBfb3BlbmVkLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgIH0KCiAgICAgIHJldHVybiBvcGVuZWQ7CiAgICB9KCkKICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICB0aGlzLiRyb290LiRvbigncGF0aWVudFNlbmRNZXNzYWdlJywgZnVuY3Rpb24gKG1lc3NhZykgewogICAgICAvLyB5b3VyIGNvZGUgZ29lcyBoZXJlCiAgICAgIF90aGlzMi5zZW5kKG1lc3NhZyk7CiAgICB9KTsKICB9Cn07"},{"version":3,"sources":["PatientTextDialog.vue"],"names":[],"mappings":";;;;;;;;;;;;AAWA,OAAA,MAAA,MAAA,eAAA;AACA,OAAA,KAAA,MAAA,iBAAA;AACA,OAAA,aAAA,MAAA,4BAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,mBADA;AAEA,EAAA,UAAA,EAAA;AAAA,IAAA,aAAA,EAAA;AAAA,GAFA;AAGA,EAAA,IAHA,kBAGA;AACA,WAAA;AACA,MAAA,YAAA,EAAA,IADA;AAEA,MAAA,SAAA,EAAA;AAFA,KAAA;AAIA,GARA;AASA,EAAA,KAAA,EAAA;AACA,IAAA,MAAA,EAAA,MADA;AAEA,IAAA,MAAA,EAAA;AAFA,GATA;AAaA,EAAA,OAAA,EAAA;AACA,IAAA,IADA,gBACA,MADA,EACA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,kBAAA,KAAA,YAAA;;AACA,UAAA,KAAA,WAAA,IAAA,KAAA,WAAA,CAAA,SAAA,EAAA;AACA,aAAA,YAAA,GAAA;AACA,UAAA,IAAA,EAAA,KADA;AAEA,UAAA,OAAA,EAAA,MAFA;AAGA,UAAA,MAAA,EAAA,KAAA,MAAA,CAAA,KAAA,CAAA,IAAA,CAAA,IAAA,CAAA;AAHA,SAAA;AAKA,QAAA,OAAA,CAAA,GAAA,CAAA,IAAA,CAAA,SAAA,CAAA,KAAA,YAAA,CAAA;AACA,aAAA,WAAA,CAAA,IAAA,CAAA,qBAAA,KAAA,MAAA,CAAA,EAAA,EAAA,IAAA,CAAA,SAAA,CAAA,KAAA,YAAA,CAAA,EAAA,EAAA;AACA;AACA,KAZA;AAaA,IAAA,OAbA,qBAaA;AAAA;;AACA,WAAA,MAAA,GAAA,IAAA,MAAA,CAAA,wCAAA,CAAA;AACA,WAAA,WAAA,GAAA,KAAA,CAAA,IAAA,CAAA,KAAA,MAAA,CAAA;AACA,WAAA,WAAA,CAAA,OAAA,CACA,EADA,EAEA,UAAA,KAAA,EAAA;AACA,QAAA,KAAA,CAAA,SAAA,GAAA,IAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,KAAA;;AACA,QAAA,KAAA,CAAA,WAAA,CAAA,SAAA,CAAA,yBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,CAAA,IAAA,CAAA,IAAA,CAAA,EAAA,EAAA,UAAA,QAAA,EAAA;AACA,cAAA,IAAA,GAAA,IAAA,CAAA,KAAA,CAAA,QAAA,CAAA,IAAA,CAAA;AACA,eAAA,KAAA,CAAA,KAAA,CAAA,wBAAA,EAAA,IAAA;AACA,UAAA,OAAA,CAAA,GAAA,CAAA,IAAA;AACA,SAJA;AAKA,OAVA,EAWA,UAAA,KAAA,EAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,KAAA;AACA,QAAA,KAAA,CAAA,SAAA,GAAA,KAAA;AACA,OAdA;AAgBA;AAhCA,GAbA;AA+CA,EAAA,QAAA,EAAA;AACA,IAAA,KAAA,EAAA,iBAAA;AACA,aAAA,CAAA,KAAA,MAAA,CAAA,EAAA;AACA;AAHA,GA/CA;AAoDA,EAAA,KAAA,EAAA;AACA,IAAA,MAAA;AAAA,4EAAA,iBAAA,MAAA,EAAA,MAAA;AAAA;AAAA;AAAA;AAAA;AACA,oBAAA,MAAA,IAAA,CAAA,MAAA,EAAA;AACA,uBAAA,OAAA;AACA;;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AADA,GApDA;AA2DA,EAAA,OA3DA,qBA2DA;AAAA;;AACA,SAAA,KAAA,CAAA,GAAA,CAAA,oBAAA,EAAA,UAAA,MAAA,EAAA;AACA;AACA,MAAA,MAAA,CAAA,IAAA,CAAA,MAAA;AACA,KAHA;AAIA;AAhEA,CAAA","sourcesContent":["<template>\n  <v-dialog\n      transition=\"dialog-bottom-transition\"\n      max-width=\"600\"\n      :value=\"opened\"\n  >\n    <ChatContainer></ChatContainer>\n  </v-dialog>\n</template>\n\n<script>\nimport SockJS from \"sockjs-client\";\nimport Stomp from \"webstomp-client\";\nimport ChatContainer from \"@/components/ChatContainer\";\n\nexport default {\n  name: \"PatientTextDialog\",\n  components:{ChatContainer},\n  data(){\n    return {\n      send_message: null,\n      connected: false,\n    }\n  },\n  props: {\n    doctor: Object,\n    opened: Boolean,\n  },\n  methods: {\n    send(messag) {\n      console.log(\"Send message:\" + this.send_message);\n      if (this.stompClient && this.stompClient.connected) {\n        this.send_message = {\n          type : \"MSG\",\n          content: messag,\n          sender: this.$store.state.auth.user.id\n        };\n        console.log(JSON.stringify(this.send_message));\n        this.stompClient.send(\"/api/chat/topic/\"+this.doctor.id, JSON.stringify(this.send_message),{});\n      }\n    },\n    connect() {\n      this.socket = new SockJS(\"http://localhost:8088/api/my-websocket\");\n      this.stompClient = Stomp.over(this.socket);\n      this.stompClient.connect(\n          {},\n          frame => {\n            this.connected = true;\n            console.log(frame);\n            this.stompClient.subscribe(\"/api/topic/messages/\"+this.$store.state.auth.user.id,function (response){\n              let data = JSON.parse(response.body);\n              this.$root.$emit(\"patientReceivedMessage\",data);\n              console.log(data);\n            });\n          },\n          error => {\n            console.log(error);\n            this.connected = false;\n          }\n      );\n    },\n  },\n  computed: {\n    isNew: function () {\n      return !this.doctor.id;\n    },\n  },\n  watch:{\n    opened: async function (newVal, oldVal) {\n      if (newVal && !oldVal) {\n        this.connect();\n      }\n    }\n  },\n  mounted() {\n    this.$root.$on('patientSendMessage', (messag) => {\n      // your code goes here\n      this.send(messag)\n    })\n  }\n};\n</script>\n\n<style scoped></style>\n"],"sourceRoot":"src/components"}]}