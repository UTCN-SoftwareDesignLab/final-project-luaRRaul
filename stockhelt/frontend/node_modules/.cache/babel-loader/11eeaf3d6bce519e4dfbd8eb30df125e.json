{"remainingRequest":"/home/tmst/an3sem2/sd/final-project-luaRRaul/stockhelt/frontend/node_modules/babel-loader/lib/index.js!/home/tmst/an3sem2/sd/final-project-luaRRaul/stockhelt/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/tmst/an3sem2/sd/final-project-luaRRaul/stockhelt/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/tmst/an3sem2/sd/final-project-luaRRaul/stockhelt/frontend/src/views/PatientMain.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/tmst/an3sem2/sd/final-project-luaRRaul/stockhelt/frontend/src/views/PatientMain.vue","mtime":1622621612346},{"path":"/home/tmst/an3sem2/sd/final-project-luaRRaul/stockhelt/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/tmst/an3sem2/sd/final-project-luaRRaul/stockhelt/frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/tmst/an3sem2/sd/final-project-luaRRaul/stockhelt/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/tmst/an3sem2/sd/final-project-luaRRaul/stockhelt/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9ob21lL3Rtc3QvYW4zc2VtMi9zZC9maW5hbC1wcm9qZWN0LWx1YVJSYXVsL3N0b2NraGVsdC9mcm9udGVuZC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IGFwaSBmcm9tICIuLi9hcGkiOwppbXBvcnQgUGF0aWVudFRleHREaWFsb2cgZnJvbSAiQC9jb21wb25lbnRzL1BhdGllbnRUZXh0RGlhbG9nIjsKaW1wb3J0IFBhdGllbnRFZGl0UHJvZmlsZSBmcm9tICJAL2NvbXBvbmVudHMvUGF0aWVudEVkaXRQcm9maWxlIjsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJQYXRpZW50TWFpbiIsCiAgY29tcG9uZW50czogewogICAgUGF0aWVudFRleHREaWFsb2c6IFBhdGllbnRUZXh0RGlhbG9nLAogICAgUGF0aWVudEVkaXRQcm9maWxlOiBQYXRpZW50RWRpdFByb2ZpbGUKICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBkb2N0b3JzOiBbXSwKICAgICAgaGVhZGVyczogW3sKICAgICAgICB0ZXh0OiAiRG9jdG9yIG5hbWUiLAogICAgICAgIHZhbHVlOiAidXNlcm5hbWUiCiAgICAgIH1dLAogICAgICB2aXNpYmxlOiB0cnVlLAogICAgICBzZW5kX21lc3NhZ2U6IG51bGwsCiAgICAgIGNvbm5lY3RlZDogZmFsc2UsCiAgICAgIGRpYWxvZ1Zpc2libGU6IGZhbHNlLAogICAgICBlZGl0VmlzaWJsZTogZmFsc2UsCiAgICAgIHNlbGVjdGVkRG9jdG9yOiB7fSwKICAgICAgc2VsZWN0ZWRQYXRpZW50OiB7fQogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGVkaXRJbmZvOiBmdW5jdGlvbiBlZGl0SW5mbygpIHsKICAgICAgdGhpcy5lZGl0VmlzaWJsZSA9IHRydWU7CiAgICB9LAogICAgb3BlbkNoYXQ6IGZ1bmN0aW9uIG9wZW5DaGF0KGRvY3RvcikgewogICAgICB0aGlzLnNlbGVjdGVkRG9jdG9yID0gZG9jdG9yOwogICAgICB0aGlzLmRpYWxvZ1Zpc2libGUgPSB0cnVlOwogICAgfSwKICAgIHJlZnJlc2hMaXN0OiBmdW5jdGlvbiByZWZyZXNoTGlzdCgpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX3RoaXMuZGlhbG9nVmlzaWJsZSA9IGZhbHNlOwogICAgICAgICAgICAgICAgX3RoaXMuZWRpdFZpc2libGUgPSBmYWxzZTsKICAgICAgICAgICAgICAgIF90aGlzLnNlbGVjdGVkRG9jdG9yID0ge307CiAgICAgICAgICAgICAgICBfdGhpcy5zZWxlY3RlZFBhdGllbnQgPSB7fTsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA2OwogICAgICAgICAgICAgICAgcmV0dXJuIGFwaS51c2Vycy5hbGxEb2N0b3JzKCk7CgogICAgICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgICAgIF90aGlzLmRvY3RvcnMgPSBfY29udGV4dC5zZW50OwoKICAgICAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlKTsKICAgICAgfSkpKCk7CiAgICB9CiAgfSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgdGhpcy5yZWZyZXNoTGlzdCgpOwogIH0KfTs="},{"version":3,"sources":["PatientMain.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA,OAAA,GAAA,MAAA,QAAA;AACA,OAAA,iBAAA,MAAA,gCAAA;AACA,OAAA,kBAAA,MAAA,iCAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,aADA;AAEA,EAAA,UAAA,EAAA;AAAA,IAAA,iBAAA,EAAA,iBAAA;AAAA,IAAA,kBAAA,EAAA;AAAA,GAFA;AAGA,EAAA,IAHA,kBAGA;AACA,WAAA;AACA,MAAA,OAAA,EAAA,EADA;AAEA,MAAA,OAAA,EAAA,CACA;AAAA,QAAA,IAAA,EAAA,aAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OADA,CAFA;AAKA,MAAA,OAAA,EAAA,IALA;AAMA,MAAA,YAAA,EAAA,IANA;AAOA,MAAA,SAAA,EAAA,KAPA;AAQA,MAAA,aAAA,EAAA,KARA;AASA,MAAA,WAAA,EAAA,KATA;AAUA,MAAA,cAAA,EAAA,EAVA;AAWA,MAAA,eAAA,EAAA;AAXA,KAAA;AAaA,GAjBA;AAkBA,EAAA,OAAA,EAAA;AACA,IAAA,QADA,sBACA;AACA,WAAA,WAAA,GAAA,IAAA;AACA,KAHA;AAIA,IAAA,QAJA,oBAIA,MAJA,EAIA;AACA,WAAA,cAAA,GAAA,MAAA;AACA,WAAA,aAAA,GAAA,IAAA;AACA,KAPA;AAQA,IAAA,WARA,yBAQA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gBAAA,KAAA,CAAA,aAAA,GAAA,KAAA;AACA,gBAAA,KAAA,CAAA,WAAA,GAAA,KAAA;AACA,gBAAA,KAAA,CAAA,cAAA,GAAA,EAAA;AACA,gBAAA,KAAA,CAAA,eAAA,GAAA,EAAA;AAJA;AAAA,uBAKA,GAAA,CAAA,KAAA,CAAA,UAAA,EALA;;AAAA;AAKA,gBAAA,KAAA,CAAA,OALA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAdA,GAlBA;AAkCA,EAAA,OAlCA,qBAkCA;AACA,SAAA,WAAA;AACA;AApCA,CAAA","sourcesContent":["<template>\n  <v-card>\n    <v-card-title>\n      Nothing\n      <v-spacer></v-spacer>\n      <v-btn @click=\"editInfo\">Edit Profile</v-btn>\n      <v-btn @click=\"openChat\">Chat</v-btn>\n      <v-data-table\n          :headers=\"headers\"\n          :items=\"doctors\"\n          @click:row=\"openChat\"\n      ></v-data-table>\n      <PatientTextDialog\n          :opened=\"dialogVisible\"\n          :doctor=\"selectedDoctor\"\n          @refresh=\"refreshList\"\n      ></PatientTextDialog>\n      <PatientEditProfile\n          :opened=\"editVisible\"\n          @refresh=\"refreshList\"\n      ></PatientEditProfile>\n    </v-card-title>\n  </v-card>\n</template>\n\n<script>\nimport api from \"../api\";\nimport PatientTextDialog from \"@/components/PatientTextDialog\";\nimport PatientEditProfile from \"@/components/PatientEditProfile\";\n\nexport default {\n  name: \"PatientMain\",\n  components:{PatientTextDialog, PatientEditProfile},\n  data(){\n    return {\n      doctors: [],\n      headers:[\n        {text:\"Doctor name\", value:\"username\"}\n      ],\n      visible: true,\n      send_message: null,\n      connected: false,\n      dialogVisible:false,\n      editVisible:false,\n      selectedDoctor:{},\n      selectedPatient:{},\n    }\n  },\n  methods: {\n    editInfo(){\n      this.editVisible = true;\n    },\n    openChat(doctor){\n      this.selectedDoctor = doctor;\n      this.dialogVisible = true;\n    },\n    async refreshList() {\n      this.dialogVisible = false;\n      this.editVisible = false;\n      this.selectedDoctor = {};\n      this.selectedPatient = {};\n      this.doctors = await api.users.allDoctors();\n    },\n  },\n  created(){\n    this.refreshList();\n  },\n};\n</script>\n\n<style scoped>\n\n</style>"],"sourceRoot":"src/views"}]}