{"remainingRequest":"/home/tmst/an3sem2/sd/assignment-2-luaRRaul/Assignments/Assignment 2/cartismh/frontend/node_modules/babel-loader/lib/index.js!/home/tmst/an3sem2/sd/assignment-2-luaRRaul/Assignments/Assignment 2/cartismh/frontend/node_modules/eslint-loader/index.js??ref--13-0!/home/tmst/an3sem2/sd/assignment-2-luaRRaul/Assignments/Assignment 2/cartismh/frontend/src/api/services/users.js","dependencies":[{"path":"/home/tmst/an3sem2/sd/assignment-2-luaRRaul/Assignments/Assignment 2/cartismh/frontend/src/api/services/users.js","mtime":1618949323878},{"path":"/home/tmst/an3sem2/sd/assignment-2-luaRRaul/Assignments/Assignment 2/cartismh/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/tmst/an3sem2/sd/assignment-2-luaRRaul/Assignments/Assignment 2/cartismh/frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/tmst/an3sem2/sd/assignment-2-luaRRaul/Assignments/Assignment 2/cartismh/frontend/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IGF1dGhIZWFkZXIsIHsgQkFTRV9VUkwsIEhUVFAgfSBmcm9tICIuLi9odHRwIjsKZXhwb3J0IGRlZmF1bHQgewogIGFsbFVzZXJzOiBmdW5jdGlvbiBhbGxVc2VycygpIHsKICAgIHJldHVybiBIVFRQLmdldChCQVNFX1VSTCArICIvdXNlcnMiLCB7CiAgICAgIGhlYWRlcnM6IGF1dGhIZWFkZXIoKQogICAgfSkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgcmV0dXJuIHJlc3BvbnNlLmRhdGE7CiAgICB9KTsKICB9LAogIGNyZWF0ZTogZnVuY3Rpb24gY3JlYXRlKHVzZXIpIHsKICAgIHJldHVybiBIVFRQLnBvc3QoQkFTRV9VUkwgKyAiL3VzZXJzIiwgdXNlciwgewogICAgICBoZWFkZXJzOiBhdXRoSGVhZGVyKCkKICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgIHJldHVybiByZXNwb25zZS5kYXRhOwogICAgfSk7CiAgfSwKICBlZGl0OiBmdW5jdGlvbiBlZGl0KHVzZXIpIHsKICAgIHJldHVybiBIVFRQLnB1dChCQVNFX1VSTCArICIvdXNlcnMvIi5jb25jYXQodXNlci5pZCksIHVzZXIsIHsKICAgICAgaGVhZGVyczogYXV0aEhlYWRlcigpCiAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICByZXR1cm4gcmVzcG9yc2UuZGF0YTsKICAgIH0pOwogIH0sCiAgZGVsZXRlOiBmdW5jdGlvbiBfZGVsZXRlKHVzZXIpIHsKICAgIHJldHVybiBIVFRQLmRlbGV0ZShCQVNFX1VSTCArICIvdXNlcnMvIi5jb25jYXQodXNlci5pZCksIHsKICAgICAgaGVhZGVyczogYXV0aEhlYWRlcigpCiAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICByZXR1cm4gcmVzcG9uc2UuZGF0YTsKICAgIH0pOwogIH0KfTs="},{"version":3,"sources":["/home/tmst/an3sem2/sd/assignment-2-luaRRaul/Assignments/Assignment 2/cartismh/frontend/src/api/services/users.js"],"names":["authHeader","BASE_URL","HTTP","allUsers","get","headers","then","response","data","create","user","post","edit","put","id","resporse","delete"],"mappings":"AAAA,OAAOA,UAAP,IAAqBC,QAArB,EAA+BC,IAA/B,QAA2C,SAA3C;AAEA,eAAe;AACbC,EAAAA,QADa,sBACF;AACT,WAAOD,IAAI,CAACE,GAAL,CAASH,QAAQ,GAAG,QAApB,EAA8B;AAAEI,MAAAA,OAAO,EAAEL,UAAU;AAArB,KAA9B,EAAyDM,IAAzD,CACL,UAACC,QAAD,EAAc;AACZ,aAAOA,QAAQ,CAACC,IAAhB;AACD,KAHI,CAAP;AAKD,GAPY;AAQbC,EAAAA,MARa,kBAQNC,IARM,EAQA;AACX,WAAOR,IAAI,CAACS,IAAL,CAAUV,QAAQ,GAAG,QAArB,EAA+BS,IAA/B,EAAqC;AAAEL,MAAAA,OAAO,EAAEL,UAAU;AAArB,KAArC,EAAgEM,IAAhE,CACH,UAACC,QAAD,EAAc;AACZ,aAAOA,QAAQ,CAACC,IAAhB;AACD,KAHE,CAAP;AAKD,GAdY;AAebI,EAAAA,IAfa,gBAeRF,IAfQ,EAeF;AACT,WAAOR,IAAI,CAACW,GAAL,CAASZ,QAAQ,oBAAaS,IAAI,CAACI,EAAlB,CAAjB,EAAyCJ,IAAzC,EAA+C;AAAEL,MAAAA,OAAO,EAAEL,UAAU;AAArB,KAA/C,EAA0EM,IAA1E,CACH,UAACC,QAAD,EAAc;AACZ,aAAOQ,QAAQ,CAACP,IAAhB;AACD,KAHE,CAAP;AAKD,GArBY;AAsBXQ,EAAAA,MAtBW,mBAsBJN,IAtBI,EAsBE;AACT,WAAOR,IAAI,CAACc,MAAL,CAAYf,QAAQ,oBAAaS,IAAI,CAACI,EAAlB,CAApB,EAA4C;AAAET,MAAAA,OAAO,EAAEL,UAAU;AAArB,KAA5C,EAAuEM,IAAvE,CACH,UAACC,QAAD,EAAc;AACV,aAAOA,QAAQ,CAACC,IAAhB;AACH,KAHE,CAAP;AAKH;AA5BU,CAAf","sourcesContent":["import authHeader, { BASE_URL, HTTP } from \"../http\";\n\nexport default {\n  allUsers() {\n    return HTTP.get(BASE_URL + \"/users\", { headers: authHeader() }).then(\n      (response) => {\n        return response.data;\n      }\n    );\n  },\n  create(user) {\n    return HTTP.post(BASE_URL + \"/users\", user, { headers: authHeader() }).then(\n        (response) => {\n          return response.data;\n        }\n    );\n  },\n  edit(user) {\n    return HTTP.put(BASE_URL + `/users/${user.id}`, user, { headers: authHeader() }).then(\n        (response) => {\n          return resporse.data;\n        }\n    );\n  },\n    delete(user) {\n        return HTTP.delete(BASE_URL + `/users/${user.id}`, { headers: authHeader() }).then(\n            (response) => {\n                return response.data;\n            }\n        );\n    },\n};\n"]}]}