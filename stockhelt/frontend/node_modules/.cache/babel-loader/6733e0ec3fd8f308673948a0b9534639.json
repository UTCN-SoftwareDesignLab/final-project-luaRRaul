{"remainingRequest":"/home/tmst/an3sem2/sd/final-project-luaRRaul/stockhelt/frontend/node_modules/babel-loader/lib/index.js!/home/tmst/an3sem2/sd/final-project-luaRRaul/stockhelt/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/tmst/an3sem2/sd/final-project-luaRRaul/stockhelt/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/tmst/an3sem2/sd/final-project-luaRRaul/stockhelt/frontend/src/views/UserList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/tmst/an3sem2/sd/final-project-luaRRaul/stockhelt/frontend/src/views/UserList.vue","mtime":1622578290373},{"path":"/home/tmst/an3sem2/sd/final-project-luaRRaul/stockhelt/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/tmst/an3sem2/sd/final-project-luaRRaul/stockhelt/frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/tmst/an3sem2/sd/final-project-luaRRaul/stockhelt/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/tmst/an3sem2/sd/final-project-luaRRaul/stockhelt/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/tmst/an3sem2/sd/final-project-luaRRaul/stockhelt/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/tmst/an3sem2/sd/final-project-luaRRaul/stockhelt/frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/tmst/an3sem2/sd/final-project-luaRRaul/stockhelt/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/tmst/an3sem2/sd/final-project-luaRRaul/stockhelt/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9ob21lL3Rtc3QvYW4zc2VtMi9zZC9maW5hbC1wcm9qZWN0LWx1YVJSYXVsL3N0b2NraGVsdC9mcm9udGVuZC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IGFwaSBmcm9tICIuLi9hcGkiOwppbXBvcnQgVXNlckRpYWxvZyBmcm9tICJAL2NvbXBvbmVudHMvVXNlckRpYWxvZyI7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiVXNlckxpc3QiLAogIGNvbXBvbmVudHM6IHsKICAgIFVzZXJEaWFsb2c6IFVzZXJEaWFsb2cKICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICB1c2VyczogW10sCiAgICAgIHNlYXJjaDogIiIsCiAgICAgIGhlYWRlcnM6IFt7CiAgICAgICAgdGV4dDogIlVzZXJuYW1lIiwKICAgICAgICBhbGlnbjogInN0YXJ0IiwKICAgICAgICBzb3J0YWJsZTogZmFsc2UsCiAgICAgICAgdmFsdWU6ICJ1c2VybmFtZSIKICAgICAgfSwgewogICAgICAgIHRleHQ6ICJFbWFpbCIsCiAgICAgICAgdmFsdWU6ICJlbWFpbCIKICAgICAgfSwgewogICAgICAgIHRleHQ6ICJSb2xlIiwKICAgICAgICB2YWx1ZTogInJvbGUiCiAgICAgIH1dLAogICAgICBkaWFsb2dWaXNpYmxlOiBmYWxzZSwKICAgICAgc2VsZWN0ZWRVc2VyOiB7fQogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGdlbmVyYXRlUERGOiBmdW5jdGlvbiBnZW5lcmF0ZVBERigpIHsKICAgICAgYXBpLnVzZXJzLmdlbmVyYXRlUERGKCk7CiAgICB9LAogICAgZ2VuZXJhdGVDU1Y6IGZ1bmN0aW9uIGdlbmVyYXRlQ1NWKCkgewogICAgICBhcGkudXNlcnMuZ2VuZXJhdGVDU1YoKTsKICAgIH0sCiAgICB0ZXN0RW1haWw6IGZ1bmN0aW9uIHRlc3RFbWFpbCgpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIGFwaS51c2Vycy50ZXN0RW1haWwoewogICAgICAgIGlkOiB0aGlzLiRzdG9yZS5zdGF0ZS5hdXRoLnVzZXIuaWQKICAgICAgfSkudGhlbihmdW5jdGlvbiAoKSB7CiAgICAgICAgcmV0dXJuIF90aGlzLiRlbWl0KCJyZWZyZXNoIik7CiAgICAgIH0pOwogICAgfSwKICAgIGVkaXRVc2VyOiBmdW5jdGlvbiBlZGl0VXNlcih1c2VyKSB7CiAgICAgIHRoaXMuc2VsZWN0ZWRVc2VyID0gdXNlcjsKICAgICAgdGhpcy5kaWFsb2dWaXNpYmxlID0gdHJ1ZTsKICAgIH0sCiAgICBhZGRVc2VyOiBmdW5jdGlvbiBhZGRVc2VyKCkgewogICAgICB0aGlzLmRpYWxvZ1Zpc2libGUgPSB0cnVlOwogICAgfSwKICAgIHJlZnJlc2hMaXN0OiBmdW5jdGlvbiByZWZyZXNoTGlzdCgpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF90aGlzMi5kaWFsb2dWaXNpYmxlID0gZmFsc2U7CiAgICAgICAgICAgICAgICBfdGhpczIuc2VsZWN0ZWRVc2VyID0ge307CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNDsKICAgICAgICAgICAgICAgIHJldHVybiBhcGkudXNlcnMuYWxsVXNlcnMoKTsKCiAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgICAgX3RoaXMyLnVzZXJzID0gX2NvbnRleHQuc2VudDsKCiAgICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSk7CiAgICAgIH0pKSgpOwogICAgfQogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIHRoaXMucmVmcmVzaExpc3QoKTsKICB9Cn07"},{"version":3,"sources":["UserList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA,OAAA,GAAA,MAAA,QAAA;AACA,OAAA,UAAA,MAAA,yBAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,UADA;AAEA,EAAA,UAAA,EAAA;AAAA,IAAA,UAAA,EAAA;AAAA,GAFA;AAGA,EAAA,IAHA,kBAGA;AACA,WAAA;AACA,MAAA,KAAA,EAAA,EADA;AAEA,MAAA,MAAA,EAAA,EAFA;AAGA,MAAA,OAAA,EAAA,CACA;AACA,QAAA,IAAA,EAAA,UADA;AAEA,QAAA,KAAA,EAAA,OAFA;AAGA,QAAA,QAAA,EAAA,KAHA;AAIA,QAAA,KAAA,EAAA;AAJA,OADA,EAOA;AAAA,QAAA,IAAA,EAAA,OAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OAPA,EAQA;AAAA,QAAA,IAAA,EAAA,MAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OARA,CAHA;AAaA,MAAA,aAAA,EAAA,KAbA;AAcA,MAAA,YAAA,EAAA;AAdA,KAAA;AAgBA,GApBA;AAqBA,EAAA,OAAA,EAAA;AACA,IAAA,WADA,yBACA;AACA,MAAA,GAAA,CAAA,KAAA,CAAA,WAAA;AACA,KAHA;AAIA,IAAA,WAJA,yBAIA;AACA,MAAA,GAAA,CAAA,KAAA,CAAA,WAAA;AACA,KANA;AAOA,IAAA,SAPA,uBAOA;AAAA;;AACA,MAAA,GAAA,CAAA,KAAA,CAAA,SAAA,CAAA;AAAA,QAAA,EAAA,EAAA,KAAA,MAAA,CAAA,KAAA,CAAA,IAAA,CAAA,IAAA,CAAA;AAAA,OAAA,EACA,IADA,CACA;AAAA,eAAA,KAAA,CAAA,KAAA,CAAA,SAAA,CAAA;AAAA,OADA;AAEA,KAVA;AAWA,IAAA,QAXA,oBAWA,IAXA,EAWA;AACA,WAAA,YAAA,GAAA,IAAA;AACA,WAAA,aAAA,GAAA,IAAA;AACA,KAdA;AAeA,IAAA,OAfA,qBAeA;AACA,WAAA,aAAA,GAAA,IAAA;AACA,KAjBA;AAkBA,IAAA,WAlBA,yBAkBA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gBAAA,MAAA,CAAA,aAAA,GAAA,KAAA;AACA,gBAAA,MAAA,CAAA,YAAA,GAAA,EAAA;AAFA;AAAA,uBAGA,GAAA,CAAA,KAAA,CAAA,QAAA,EAHA;;AAAA;AAGA,gBAAA,MAAA,CAAA,KAHA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAtBA,GArBA;AA6CA,EAAA,OA7CA,qBA6CA;AACA,SAAA,WAAA;AACA;AA/CA,CAAA","sourcesContent":["<template>\n  <v-card>\n    <v-card-title>\n      Users\n      <v-spacer></v-spacer>\n      <v-text-field\n        v-model=\"search\"\n        append-icon=\"mdi-magnify\"\n        label=\"Search\"\n        single-line\n        hide-details\n      ></v-text-field>\n      <v-btn @click=\"addUser\">Create User</v-btn>\n      <v-btn @click=\"generatePDF\">PDF</v-btn>\n      <v-btn @click=\"generateCSV\">CSV</v-btn>\n      <v-btn @click=\"testEmail\">Test Mail</v-btn>\n    </v-card-title>\n    <v-data-table\n      :headers=\"headers\"\n      :items=\"users\"\n      :search=\"search\"\n      @click:row=\"editUser\"\n    ></v-data-table>\n    <UserDialog\n        :opened=\"dialogVisible\"\n        :user=\"selectedUser\"\n        @refresh=\"refreshList\"\n    ></UserDialog>\n  </v-card>\n</template>\n\n<script>\nimport api from \"../api\";\nimport UserDialog from \"@/components/UserDialog\";\n\nexport default {\n  name: \"UserList\",\n  components: {UserDialog},\n  data() {\n    return {\n      users: [],\n      search: \"\",\n      headers: [\n        {\n          text: \"Username\",\n          align: \"start\",\n          sortable: false,\n          value: \"username\",\n        },\n        { text: \"Email\", value: \"email\" },\n        { text: \"Role\", value: \"role\" },\n      ],\n      dialogVisible: false,\n      selectedUser: {},\n    };\n  },\n  methods: {\n    generatePDF() {\n      api.users.generatePDF();\n    },\n    generateCSV() {\n      api.users.generateCSV();\n    },\n    testEmail(){\n      api.users.testEmail({id:this.$store.state.auth.user.id\n      }).then(() => this.$emit(\"refresh\"));\n    },\n    editUser(user) {\n      this.selectedUser = user;\n      this.dialogVisible = true;\n    },\n    addUser() {\n      this.dialogVisible = true;\n    },\n    async refreshList() {\n      this.dialogVisible = false;\n      this.selectedUser = {};\n      this.users = await api.users.allUsers();\n    },\n  },\n  created() {\n    this.refreshList();\n  },\n};\n</script>\n\n<style scoped></style>\n"],"sourceRoot":"src/views"}]}