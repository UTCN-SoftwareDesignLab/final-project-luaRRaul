{"remainingRequest":"/home/tmst/an3sem2/sd/assignment-3-luaRRaul/Assignments/Assignment 3/stockhelt/frontend/node_modules/babel-loader/lib/index.js!/home/tmst/an3sem2/sd/assignment-3-luaRRaul/Assignments/Assignment 3/stockhelt/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/tmst/an3sem2/sd/assignment-3-luaRRaul/Assignments/Assignment 3/stockhelt/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/tmst/an3sem2/sd/assignment-3-luaRRaul/Assignments/Assignment 3/stockhelt/frontend/src/components/PatientDialog.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/tmst/an3sem2/sd/assignment-3-luaRRaul/Assignments/Assignment 3/stockhelt/frontend/src/components/PatientDialog.vue","mtime":1620416405901},{"path":"/home/tmst/an3sem2/sd/assignment-3-luaRRaul/Assignments/Assignment 3/stockhelt/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/tmst/an3sem2/sd/assignment-3-luaRRaul/Assignments/Assignment 3/stockhelt/frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/tmst/an3sem2/sd/assignment-3-luaRRaul/Assignments/Assignment 3/stockhelt/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/tmst/an3sem2/sd/assignment-3-luaRRaul/Assignments/Assignment 3/stockhelt/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9ob21lL3Rtc3QvYW4zc2VtMi9zZC9hc3NpZ25tZW50LTMtbHVhUlJhdWwvQXNzaWdubWVudHMvQXNzaWdubWVudCAzL3N0b2NraGVsdC9mcm9udGVuZC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IGFwaSBmcm9tICIuLi9hcGkiOwppbXBvcnQgU29ja0pTIGZyb20gInNvY2tqcy1jbGllbnQiOwppbXBvcnQgU3RvbXAgZnJvbSAid2Vic3RvbXAtY2xpZW50IjsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJQYXRpZW50RGlhbG9nIiwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgc2VuZF9tZXNzYWdlOiBudWxsLAogICAgICBjb25uZWN0ZWQ6IGZhbHNlIC8vIHJvbGVzOiBbIlNlY3JldGFyeSIsICJEb2N0b3IiLCAiQWRtaW4iXSwKCiAgICB9OwogIH0sCiAgcHJvcHM6IHsKICAgIHBhdGllbnQ6IE9iamVjdCwKICAgIG9wZW5lZDogQm9vbGVhbgogIH0sCiAgbWV0aG9kczogewogICAgZGVsZXQ6IGZ1bmN0aW9uIGRlbGV0KCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgYXBpLnBhdGllbnRzLmRlbGV0ZSh7CiAgICAgICAgaWQ6IHRoaXMucGF0aWVudC5pZAogICAgICB9KS50aGVuKGZ1bmN0aW9uICgpIHsKICAgICAgICByZXR1cm4gX3RoaXMuJGVtaXQoInJlZnJlc2giKTsKICAgICAgfSk7CiAgICB9LAogICAgcGVyc2lzdDogZnVuY3Rpb24gcGVyc2lzdCgpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICBpZiAodGhpcy5pc05ldykgewogICAgICAgIGFwaS5wYXRpZW50cy5jcmVhdGUoewogICAgICAgICAgZmlyc3ROYW1lOiB0aGlzLnBhdGllbnQuZmlyc3ROYW1lLAogICAgICAgICAgbGFzdE5hbWU6IHRoaXMucGF0aWVudC5sYXN0TmFtZSwKICAgICAgICAgIGVtYWlsOiB0aGlzLnBhdGllbnQuZW1haWwsCiAgICAgICAgICBjbnA6IHRoaXMucGF0aWVudC5jbnAsCiAgICAgICAgICBkYXRlT2ZCaXJ0aDogdGhpcy5wYXRpZW50LmRhdGVPZkJpcnRoLAogICAgICAgICAgYWRkcmVzczogdGhpcy5wYXRpZW50LmFkZHJlc3MKICAgICAgICB9KS50aGVuKGZ1bmN0aW9uICgpIHsKICAgICAgICAgIHJldHVybiBfdGhpczIuJGVtaXQoInJlZnJlc2giKTsKICAgICAgICB9KTsKICAgICAgfSBlbHNlIHsKICAgICAgICBhcGkucGF0aWVudHMuZWRpdCh7CiAgICAgICAgICBpZDogdGhpcy5wYXRpZW50LmlkLAogICAgICAgICAgZmlyc3ROYW1lOiB0aGlzLnBhdGllbnQuZmlyc3ROYW1lLAogICAgICAgICAgbGFzdE5hbWU6IHRoaXMucGF0aWVudC5sYXN0TmFtZSwKICAgICAgICAgIGVtYWlsOiB0aGlzLnBhdGllbnQuZW1haWwsCiAgICAgICAgICBjbnA6IHRoaXMucGF0aWVudC5jbnAsCiAgICAgICAgICBkYXRlT2ZCaXJ0aDogdGhpcy5wYXRpZW50LmRhdGVPZkJpcnRoLAogICAgICAgICAgYWRkcmVzczogdGhpcy5wYXRpZW50LmFkZHJlc3MKICAgICAgICB9KS50aGVuKGZ1bmN0aW9uICgpIHsKICAgICAgICAgIHJldHVybiBfdGhpczIuJGVtaXQoInJlZnJlc2giKTsKICAgICAgICB9KTsKICAgICAgfQogICAgfSwKICAgIHNlbmQ6IGZ1bmN0aW9uIHNlbmQoKSB7CiAgICAgIGNvbnNvbGUubG9nKCJTZW5kIG1lc3NhZ2U6IiArIHRoaXMuc2VuZF9tZXNzYWdlKTsKCiAgICAgIGlmICh0aGlzLnN0b21wQ2xpZW50ICYmIHRoaXMuc3RvbXBDbGllbnQuY29ubmVjdGVkKSB7CiAgICAgICAgdGhpcy5zZW5kX21lc3NhZ2UgPSB7CiAgICAgICAgICBwYXRpZW50SWQ6IHRoaXMucGF0aWVudC5pZAogICAgICAgIH07CiAgICAgICAgY29uc29sZS5sb2coSlNPTi5zdHJpbmdpZnkodGhpcy5zZW5kX21lc3NhZ2UpKTsKICAgICAgICB0aGlzLnN0b21wQ2xpZW50LnNlbmQoIi9hcGkvd3MvYXJyaXZhbCIsIEpTT04uc3RyaW5naWZ5KHRoaXMuc2VuZF9tZXNzYWdlKSwge30pOwogICAgICB9CiAgICB9LAogICAgY29ubmVjdDogZnVuY3Rpb24gY29ubmVjdCgpIHsKICAgICAgdmFyIF90aGlzMyA9IHRoaXM7CgogICAgICB0aGlzLnNvY2tldCA9IG5ldyBTb2NrSlMoImh0dHA6Ly9sb2NhbGhvc3Q6ODA4OC9hcGkvbXktd2Vic29ja2V0Iik7CiAgICAgIHRoaXMuc3RvbXBDbGllbnQgPSBTdG9tcC5vdmVyKHRoaXMuc29ja2V0KTsKICAgICAgdGhpcy5zdG9tcENsaWVudC5jb25uZWN0KHt9LCBmdW5jdGlvbiAoZnJhbWUpIHsKICAgICAgICBfdGhpczMuY29ubmVjdGVkID0gdHJ1ZTsKICAgICAgICBjb25zb2xlLmxvZyhmcmFtZSk7CiAgICAgIH0sIGZ1bmN0aW9uIChlcnJvcikgewogICAgICAgIGNvbnNvbGUubG9nKGVycm9yKTsKICAgICAgICBfdGhpczMuY29ubmVjdGVkID0gZmFsc2U7CiAgICAgIH0pOwogICAgfQogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIGlzTmV3OiBmdW5jdGlvbiBpc05ldygpIHsKICAgICAgcmV0dXJuICF0aGlzLnBhdGllbnQuaWQ7CiAgICB9CiAgfSwKICB3YXRjaDogewogICAgb3BlbmVkOiBmdW5jdGlvbiAoKSB7CiAgICAgIHZhciBfb3BlbmVkID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKG5ld1ZhbCwgb2xkVmFsKSB7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgaWYgKCEobmV3VmFsICYmICFvbGRWYWwpKSB7CiAgICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA1OwogICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMzsKICAgICAgICAgICAgICAgIHJldHVybiBhcGkucGF0aWVudHMuZ2V0RnVsbFBhdGllbnQoewogICAgICAgICAgICAgICAgICBpZDogdGhpcy5wYXRpZW50LmlkCiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgICAgdGhpcy5wYXRpZW50ID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICAgIHRoaXMuY29ubmVjdCgpOwoKICAgICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlLCB0aGlzKTsKICAgICAgfSkpOwoKICAgICAgZnVuY3Rpb24gb3BlbmVkKF94LCBfeDIpIHsKICAgICAgICByZXR1cm4gX29wZW5lZC5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICB9CgogICAgICByZXR1cm4gb3BlbmVkOwogICAgfSgpCiAgfQp9Ow=="},{"version":3,"sources":["PatientDialog.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <v-dialog\n      transition=\"dialog-bottom-transition\"\n      max-width=\"600\"\n      :value=\"opened\"\n  >\n    <template>\n      <v-card>\n        <v-toolbar color=\"primary\" dark>\n          {{ isNew ? \"Create patient\" : \"Edit patient\" }}\n        </v-toolbar>\n        <v-form >\n          <v-text-field v-model=\"patient.firstName\" label=\"First Name\" />\n          <v-text-field v-model=\"patient.lastName\" label=\"Last Name\" />\n          <v-text-field v-model=\"patient.email\" label=\"Email\" />\n          <v-text-field v-model=\"patient.cnp\" label=\"CNP\" />\n          <v-text-field v-model=\"patient.dateOfBirth\" label=\"Date of Birth\" />\n          <v-text-field v-model=\"patient.address\" label=\"Address\" />\n        </v-form>\n        <v-card-actions>\n          <v-btn @click=\"persist\">\n            {{ isNew ? \"Create\" : \"Save\" }}\n          </v-btn>\n          <v-btn @click=\"delet\">\n            Delete\n          </v-btn>\n          <v-btn @click=\"send\">\n            Arrived\n          </v-btn>\n        </v-card-actions>\n      </v-card>\n    </template>\n  </v-dialog>\n</template>\n\n<script>\nimport api from \"../api\";\nimport SockJS from \"sockjs-client\";\nimport Stomp from \"webstomp-client\";\n\nexport default {\n  name: \"PatientDialog\",\n  data(){\n    return {\n    send_message: null,\n    connected: false,\n      // roles: [\"Secretary\", \"Doctor\", \"Admin\"],\n    }\n  },\n  props: {\n    patient: Object,\n    opened: Boolean,\n  },\n  methods: {\n    delet(){\n      api.patients.delete({\n        id: this.patient.id,\n      }).then(() => this.$emit(\"refresh\"));\n    },\n    persist() {\n      if (this.isNew) {\n        api.patients\n            .create({\n              firstName: this.patient.firstName,\n              lastName: this.patient.lastName,\n              email: this.patient.email,\n              cnp: this.patient.cnp,\n              dateOfBirth: this.patient.dateOfBirth,\n              address: this.patient.address,\n            })\n            .then(() => this.$emit(\"refresh\"));\n      } else {\n        api.patients\n            .edit({\n              id: this.patient.id,\n              firstName: this.patient.firstName,\n              lastName: this.patient.lastName,\n              email: this.patient.email,\n              cnp: this.patient.cnp,\n              dateOfBirth: this.patient.dateOfBirth,\n              address: this.patient.address,\n            })\n            .then(() => this.$emit(\"refresh\"));\n      }\n    },\n    send() {\n      console.log(\"Send message:\" + this.send_message);\n      if (this.stompClient && this.stompClient.connected) {\n        this.send_message = { patientId : this.patient.id };\n        console.log(JSON.stringify(this.send_message));\n        this.stompClient.send(\"/api/ws/arrival\", JSON.stringify(this.send_message),{});\n      }\n    },\n    connect() {\n      this.socket = new SockJS(\"http://localhost:8088/api/my-websocket\");\n      this.stompClient = Stomp.over(this.socket);\n      this.stompClient.connect(\n          {},\n          frame => {\n            this.connected = true;\n            console.log(frame);\n          },\n          error => {\n            console.log(error);\n            this.connected = false;\n          }\n      );\n    },\n  },\n  computed: {\n    isNew: function () {\n      return !this.patient.id;\n    },\n  },\n  watch:{\n    opened: async function (newVal, oldVal) {\n      if (newVal && !oldVal) {\n        this.patient = await api.patients.getFullPatient({\n          id: this.patient.id\n        });\n        this.connect();\n      }\n    }\n  },\n};\n</script>\n\n<style scoped></style>\n"],"sourceRoot":"src/components"}]}