{"remainingRequest":"/home/tmst/an3sem2/sd/assignment-3-luaRRaul/Assignments/Assignment 3/stockhelt/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/tmst/an3sem2/sd/assignment-3-luaRRaul/Assignments/Assignment 3/stockhelt/frontend/src/components/PatientDialog.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/tmst/an3sem2/sd/assignment-3-luaRRaul/Assignments/Assignment 3/stockhelt/frontend/src/components/PatientDialog.vue","mtime":1620416405901},{"path":"/home/tmst/an3sem2/sd/assignment-3-luaRRaul/Assignments/Assignment 3/stockhelt/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/tmst/an3sem2/sd/assignment-3-luaRRaul/Assignments/Assignment 3/stockhelt/frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/tmst/an3sem2/sd/assignment-3-luaRRaul/Assignments/Assignment 3/stockhelt/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/tmst/an3sem2/sd/assignment-3-luaRRaul/Assignments/Assignment 3/stockhelt/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBhcGkgZnJvbSAiLi4vYXBpIjsKaW1wb3J0IFNvY2tKUyBmcm9tICJzb2NranMtY2xpZW50IjsKaW1wb3J0IFN0b21wIGZyb20gIndlYnN0b21wLWNsaWVudCI7CgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIlBhdGllbnREaWFsb2ciLAogIGRhdGEoKXsKICAgIHJldHVybiB7CiAgICBzZW5kX21lc3NhZ2U6IG51bGwsCiAgICBjb25uZWN0ZWQ6IGZhbHNlLAogICAgICAvLyByb2xlczogWyJTZWNyZXRhcnkiLCAiRG9jdG9yIiwgIkFkbWluIl0sCiAgICB9CiAgfSwKICBwcm9wczogewogICAgcGF0aWVudDogT2JqZWN0LAogICAgb3BlbmVkOiBCb29sZWFuLAogIH0sCiAgbWV0aG9kczogewogICAgZGVsZXQoKXsKICAgICAgYXBpLnBhdGllbnRzLmRlbGV0ZSh7CiAgICAgICAgaWQ6IHRoaXMucGF0aWVudC5pZCwKICAgICAgfSkudGhlbigoKSA9PiB0aGlzLiRlbWl0KCJyZWZyZXNoIikpOwogICAgfSwKICAgIHBlcnNpc3QoKSB7CiAgICAgIGlmICh0aGlzLmlzTmV3KSB7CiAgICAgICAgYXBpLnBhdGllbnRzCiAgICAgICAgICAgIC5jcmVhdGUoewogICAgICAgICAgICAgIGZpcnN0TmFtZTogdGhpcy5wYXRpZW50LmZpcnN0TmFtZSwKICAgICAgICAgICAgICBsYXN0TmFtZTogdGhpcy5wYXRpZW50Lmxhc3ROYW1lLAogICAgICAgICAgICAgIGVtYWlsOiB0aGlzLnBhdGllbnQuZW1haWwsCiAgICAgICAgICAgICAgY25wOiB0aGlzLnBhdGllbnQuY25wLAogICAgICAgICAgICAgIGRhdGVPZkJpcnRoOiB0aGlzLnBhdGllbnQuZGF0ZU9mQmlydGgsCiAgICAgICAgICAgICAgYWRkcmVzczogdGhpcy5wYXRpZW50LmFkZHJlc3MsCiAgICAgICAgICAgIH0pCiAgICAgICAgICAgIC50aGVuKCgpID0+IHRoaXMuJGVtaXQoInJlZnJlc2giKSk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgYXBpLnBhdGllbnRzCiAgICAgICAgICAgIC5lZGl0KHsKICAgICAgICAgICAgICBpZDogdGhpcy5wYXRpZW50LmlkLAogICAgICAgICAgICAgIGZpcnN0TmFtZTogdGhpcy5wYXRpZW50LmZpcnN0TmFtZSwKICAgICAgICAgICAgICBsYXN0TmFtZTogdGhpcy5wYXRpZW50Lmxhc3ROYW1lLAogICAgICAgICAgICAgIGVtYWlsOiB0aGlzLnBhdGllbnQuZW1haWwsCiAgICAgICAgICAgICAgY25wOiB0aGlzLnBhdGllbnQuY25wLAogICAgICAgICAgICAgIGRhdGVPZkJpcnRoOiB0aGlzLnBhdGllbnQuZGF0ZU9mQmlydGgsCiAgICAgICAgICAgICAgYWRkcmVzczogdGhpcy5wYXRpZW50LmFkZHJlc3MsCiAgICAgICAgICAgIH0pCiAgICAgICAgICAgIC50aGVuKCgpID0+IHRoaXMuJGVtaXQoInJlZnJlc2giKSk7CiAgICAgIH0KICAgIH0sCiAgICBzZW5kKCkgewogICAgICBjb25zb2xlLmxvZygiU2VuZCBtZXNzYWdlOiIgKyB0aGlzLnNlbmRfbWVzc2FnZSk7CiAgICAgIGlmICh0aGlzLnN0b21wQ2xpZW50ICYmIHRoaXMuc3RvbXBDbGllbnQuY29ubmVjdGVkKSB7CiAgICAgICAgdGhpcy5zZW5kX21lc3NhZ2UgPSB7IHBhdGllbnRJZCA6IHRoaXMucGF0aWVudC5pZCB9OwogICAgICAgIGNvbnNvbGUubG9nKEpTT04uc3RyaW5naWZ5KHRoaXMuc2VuZF9tZXNzYWdlKSk7CiAgICAgICAgdGhpcy5zdG9tcENsaWVudC5zZW5kKCIvYXBpL3dzL2Fycml2YWwiLCBKU09OLnN0cmluZ2lmeSh0aGlzLnNlbmRfbWVzc2FnZSkse30pOwogICAgICB9CiAgICB9LAogICAgY29ubmVjdCgpIHsKICAgICAgdGhpcy5zb2NrZXQgPSBuZXcgU29ja0pTKCJodHRwOi8vbG9jYWxob3N0OjgwODgvYXBpL215LXdlYnNvY2tldCIpOwogICAgICB0aGlzLnN0b21wQ2xpZW50ID0gU3RvbXAub3Zlcih0aGlzLnNvY2tldCk7CiAgICAgIHRoaXMuc3RvbXBDbGllbnQuY29ubmVjdCgKICAgICAgICAgIHt9LAogICAgICAgICAgZnJhbWUgPT4gewogICAgICAgICAgICB0aGlzLmNvbm5lY3RlZCA9IHRydWU7CiAgICAgICAgICAgIGNvbnNvbGUubG9nKGZyYW1lKTsKICAgICAgICAgIH0sCiAgICAgICAgICBlcnJvciA9PiB7CiAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycm9yKTsKICAgICAgICAgICAgdGhpcy5jb25uZWN0ZWQgPSBmYWxzZTsKICAgICAgICAgIH0KICAgICAgKTsKICAgIH0sCiAgfSwKICBjb21wdXRlZDogewogICAgaXNOZXc6IGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuICF0aGlzLnBhdGllbnQuaWQ7CiAgICB9LAogIH0sCiAgd2F0Y2g6ewogICAgb3BlbmVkOiBhc3luYyBmdW5jdGlvbiAobmV3VmFsLCBvbGRWYWwpIHsKICAgICAgaWYgKG5ld1ZhbCAmJiAhb2xkVmFsKSB7CiAgICAgICAgdGhpcy5wYXRpZW50ID0gYXdhaXQgYXBpLnBhdGllbnRzLmdldEZ1bGxQYXRpZW50KHsKICAgICAgICAgIGlkOiB0aGlzLnBhdGllbnQuaWQKICAgICAgICB9KTsKICAgICAgICB0aGlzLmNvbm5lY3QoKTsKICAgICAgfQogICAgfQogIH0sCn07Cg=="},{"version":3,"sources":["PatientDialog.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"PatientDialog.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <v-dialog\n      transition=\"dialog-bottom-transition\"\n      max-width=\"600\"\n      :value=\"opened\"\n  >\n    <template>\n      <v-card>\n        <v-toolbar color=\"primary\" dark>\n          {{ isNew ? \"Create patient\" : \"Edit patient\" }}\n        </v-toolbar>\n        <v-form >\n          <v-text-field v-model=\"patient.firstName\" label=\"First Name\" />\n          <v-text-field v-model=\"patient.lastName\" label=\"Last Name\" />\n          <v-text-field v-model=\"patient.email\" label=\"Email\" />\n          <v-text-field v-model=\"patient.cnp\" label=\"CNP\" />\n          <v-text-field v-model=\"patient.dateOfBirth\" label=\"Date of Birth\" />\n          <v-text-field v-model=\"patient.address\" label=\"Address\" />\n        </v-form>\n        <v-card-actions>\n          <v-btn @click=\"persist\">\n            {{ isNew ? \"Create\" : \"Save\" }}\n          </v-btn>\n          <v-btn @click=\"delet\">\n            Delete\n          </v-btn>\n          <v-btn @click=\"send\">\n            Arrived\n          </v-btn>\n        </v-card-actions>\n      </v-card>\n    </template>\n  </v-dialog>\n</template>\n\n<script>\nimport api from \"../api\";\nimport SockJS from \"sockjs-client\";\nimport Stomp from \"webstomp-client\";\n\nexport default {\n  name: \"PatientDialog\",\n  data(){\n    return {\n    send_message: null,\n    connected: false,\n      // roles: [\"Secretary\", \"Doctor\", \"Admin\"],\n    }\n  },\n  props: {\n    patient: Object,\n    opened: Boolean,\n  },\n  methods: {\n    delet(){\n      api.patients.delete({\n        id: this.patient.id,\n      }).then(() => this.$emit(\"refresh\"));\n    },\n    persist() {\n      if (this.isNew) {\n        api.patients\n            .create({\n              firstName: this.patient.firstName,\n              lastName: this.patient.lastName,\n              email: this.patient.email,\n              cnp: this.patient.cnp,\n              dateOfBirth: this.patient.dateOfBirth,\n              address: this.patient.address,\n            })\n            .then(() => this.$emit(\"refresh\"));\n      } else {\n        api.patients\n            .edit({\n              id: this.patient.id,\n              firstName: this.patient.firstName,\n              lastName: this.patient.lastName,\n              email: this.patient.email,\n              cnp: this.patient.cnp,\n              dateOfBirth: this.patient.dateOfBirth,\n              address: this.patient.address,\n            })\n            .then(() => this.$emit(\"refresh\"));\n      }\n    },\n    send() {\n      console.log(\"Send message:\" + this.send_message);\n      if (this.stompClient && this.stompClient.connected) {\n        this.send_message = { patientId : this.patient.id };\n        console.log(JSON.stringify(this.send_message));\n        this.stompClient.send(\"/api/ws/arrival\", JSON.stringify(this.send_message),{});\n      }\n    },\n    connect() {\n      this.socket = new SockJS(\"http://localhost:8088/api/my-websocket\");\n      this.stompClient = Stomp.over(this.socket);\n      this.stompClient.connect(\n          {},\n          frame => {\n            this.connected = true;\n            console.log(frame);\n          },\n          error => {\n            console.log(error);\n            this.connected = false;\n          }\n      );\n    },\n  },\n  computed: {\n    isNew: function () {\n      return !this.patient.id;\n    },\n  },\n  watch:{\n    opened: async function (newVal, oldVal) {\n      if (newVal && !oldVal) {\n        this.patient = await api.patients.getFullPatient({\n          id: this.patient.id\n        });\n        this.connect();\n      }\n    }\n  },\n};\n</script>\n\n<style scoped></style>\n"]}]}