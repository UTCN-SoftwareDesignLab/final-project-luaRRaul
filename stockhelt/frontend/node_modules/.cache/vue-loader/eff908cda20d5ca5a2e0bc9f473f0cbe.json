{"remainingRequest":"/home/tmst/an3sem2/sd/assignment-3-luaRRaul/Assignments/Assignment 3/stockhelt/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/tmst/an3sem2/sd/assignment-3-luaRRaul/Assignments/Assignment 3/stockhelt/frontend/src/components/DoctorsAppointmentDialog.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/tmst/an3sem2/sd/assignment-3-luaRRaul/Assignments/Assignment 3/stockhelt/frontend/src/components/DoctorsAppointmentDialog.vue","mtime":1620683092006},{"path":"/home/tmst/an3sem2/sd/assignment-3-luaRRaul/Assignments/Assignment 3/stockhelt/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/tmst/an3sem2/sd/assignment-3-luaRRaul/Assignments/Assignment 3/stockhelt/frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/tmst/an3sem2/sd/assignment-3-luaRRaul/Assignments/Assignment 3/stockhelt/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/tmst/an3sem2/sd/assignment-3-luaRRaul/Assignments/Assignment 3/stockhelt/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBhcGkgZnJvbSAiLi4vYXBpIjsKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiRG9jdG9yc0FwcG9pbnRtZW50RGlhbG9nIiwKICBwcm9wczogewogICAgYXBwb2ludG1lbnQ6IE9iamVjdCwKICAgIG9wZW5lZDogQm9vbGVhbiwKICB9LAogIG1ldGhvZHM6IHsKICAgIGRlbGV0KCl7CiAgICAgIGFwaS5hcHBvaW50bWVudHMuZGVsZXRlKAogICAgICAgICAgewogICAgICAgICAgICBpZDogdGhpcy5hcHBvaW50bWVudC5pZCwKICAgICAgICAgIH0KICAgICAgKS50aGVuKCgpID0+IHRoaXMuJGVtaXQoInJlZnJlc2giKSk7CiAgICB9LAogICAgcGVyc2lzdCgpIHsKICAgICAgICBhcGkuYXBwb2ludG1lbnRzCiAgICAgICAgICAgIC5lZGl0KHsKICAgICAgICAgICAgICBpZDogdGhpcy5hcHBvaW50bWVudC5pZCwKICAgICAgICAgICAgICBmaXJzdE5hbWU6IHRoaXMuYXBwb2ludG1lbnQucGF0aWVudC5maXJzdE5hbWUsCiAgICAgICAgICAgICAgbGFzdE5hbWU6IHRoaXMuYXBwb2ludG1lbnQucGF0aWVudC5sYXN0TmFtZSwKICAgICAgICAgICAgICBkZXNjcmlwdGlvbjogdGhpcy5hcHBvaW50bWVudC5kZXNjcmlwdGlvbiwKICAgICAgICAgICAgICBkYXRlOiB0aGlzLmFwcG9pbnRtZW50LmRhdGUsCiAgICAgICAgICAgIH0pCiAgICAgICAgICAgIC50aGVuKCgpID0+IHRoaXMuJGVtaXQoInJlZnJlc2giKSk7CiAgICB9LAogIH0sCiAgd2F0Y2g6ewogICAgb3BlbmVkOiBhc3luYyBmdW5jdGlvbiAobmV3VmFsLCBvbGRWYWwpIHsKICAgICAgaWYgKG5ld1ZhbCAmJiAhb2xkVmFsKSB7CiAgICAgICAgdGhpcy5hcHBvaW50bWVudCA9IGF3YWl0IGFwaS5hcHBvaW50bWVudHMuZ2V0RnVsbEFwcG9pbnRtZW50KHsKICAgICAgICAgIGlkOiB0aGlzLmFwcG9pbnRtZW50LmlkCiAgICAgICAgfSk7CiAgICAgICAgdGhpcy5jb25uZWN0KCk7CiAgICAgIH0KICAgIH0KICB9LAp9Owo="},{"version":3,"sources":["DoctorsAppointmentDialog.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAsBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"DoctorsAppointmentDialog.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <v-dialog\n      transition=\"dialog-bottom-transition\"\n      max-width=\"600\"\n      :value=\"opened\"\n  >\n    <template>\n      <v-card>\n        <v-toolbar color=\"primary\" dark>\n        </v-toolbar>\n        <v-form>\n          <v-text-field v-model=\"appointment.patient.firstName\" label=\"Patient's First Name\" />\n          <v-text-field v-model=\"appointment.patient.lastName\" label=\"Patient's Last Name\" />\n          <v-text-field v-model=\"appointment.description\" label=\"Description\" />\n          <v-text-field v-model=\"appointment.date\" label=\"Date\" />\n        </v-form>\n      </v-card>\n    </template>\n  </v-dialog>\n</template>\n\n<script>\nimport api from \"../api\";\n\nexport default {\n  name: \"DoctorsAppointmentDialog\",\n  props: {\n    appointment: Object,\n    opened: Boolean,\n  },\n  methods: {\n    delet(){\n      api.appointments.delete(\n          {\n            id: this.appointment.id,\n          }\n      ).then(() => this.$emit(\"refresh\"));\n    },\n    persist() {\n        api.appointments\n            .edit({\n              id: this.appointment.id,\n              firstName: this.appointment.patient.firstName,\n              lastName: this.appointment.patient.lastName,\n              description: this.appointment.description,\n              date: this.appointment.date,\n            })\n            .then(() => this.$emit(\"refresh\"));\n    },\n  },\n  watch:{\n    opened: async function (newVal, oldVal) {\n      if (newVal && !oldVal) {\n        this.appointment = await api.appointments.getFullAppointment({\n          id: this.appointment.id\n        });\n        this.connect();\n      }\n    }\n  },\n};\n</script>\n\n<style scoped></style>\n"]}]}