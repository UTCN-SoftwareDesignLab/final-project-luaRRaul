{"remainingRequest":"/home/tmst/an3sem2/sd/assignment-3-luaRRaul/Assignments/Assignment 3/stockhelt/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/tmst/an3sem2/sd/assignment-3-luaRRaul/Assignments/Assignment 3/stockhelt/frontend/src/components/PatientDialog.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/tmst/an3sem2/sd/assignment-3-luaRRaul/Assignments/Assignment 3/stockhelt/frontend/src/components/PatientDialog.vue","mtime":1619897801230},{"path":"/home/tmst/an3sem2/sd/assignment-3-luaRRaul/Assignments/Assignment 3/stockhelt/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/tmst/an3sem2/sd/assignment-3-luaRRaul/Assignments/Assignment 3/stockhelt/frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/tmst/an3sem2/sd/assignment-3-luaRRaul/Assignments/Assignment 3/stockhelt/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/tmst/an3sem2/sd/assignment-3-luaRRaul/Assignments/Assignment 3/stockhelt/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBhcGkgZnJvbSAiLi4vYXBpIjsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJQYXRpZW50RGlhbG9nIiwKICBwcm9wczogewogICAgcGF0aWVudDogT2JqZWN0LAogICAgb3BlbmVkOiBCb29sZWFuLAogIH0sCiAgbWV0aG9kczogewogICAgZGVsZXQoKXsKICAgICAgYXBpLnBhdGllbnRzLmRlbGV0ZSh7CiAgICAgICAgaWQ6IHRoaXMucGF0aWVudC5pZCwKICAgICAgfSkudGhlbigoKSA9PiB0aGlzLiRlbWl0KCJyZWZyZXNoIikpOwogICAgfSwKICAgIHBlcnNpc3QoKSB7CiAgICAgIGlmICh0aGlzLmlzTmV3KSB7CiAgICAgICAgYXBpLnBhdGllbnRzCiAgICAgICAgICAgIC5jcmVhdGUoewogICAgICAgICAgICAgIGZpcnN0TmFtZTogdGhpcy5wYXRpZW50LmZpcnN0TmFtZSwKICAgICAgICAgICAgICBsYXN0TmFtZTogdGhpcy5wYXRpZW50Lmxhc3ROYW1lLAogICAgICAgICAgICAgIGVtYWlsOiB0aGlzLnBhdGllbnQuZW1haWwsCiAgICAgICAgICAgICAgY25wOiB0aGlzLnBhdGllbnQuY25wLAogICAgICAgICAgICAgIGRhdGVPZkJpcnRoOiB0aGlzLnBhdGllbnQuZGF0ZU9mQmlydGgsCiAgICAgICAgICAgICAgYWRkcmVzczogdGhpcy5wYXRpZW50LmFkZHJlc3MsCiAgICAgICAgICAgIH0pCiAgICAgICAgICAgIC50aGVuKCgpID0+IHRoaXMuJGVtaXQoInJlZnJlc2giKSk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgYXBpLnBhdGllbnRzCiAgICAgICAgICAgIC5lZGl0KHsKICAgICAgICAgICAgICBpZDogdGhpcy5wYXRpZW50LmlkLAogICAgICAgICAgICAgIGZpcnN0TmFtZTogdGhpcy5wYXRpZW50LmZpcnN0TmFtZSwKICAgICAgICAgICAgICBsYXN0TmFtZTogdGhpcy5wYXRpZW50Lmxhc3ROYW1lLAogICAgICAgICAgICAgIGVtYWlsOiB0aGlzLnBhdGllbnQuZW1haWwsCiAgICAgICAgICAgICAgY25wOiB0aGlzLnBhdGllbnQuY25wLAogICAgICAgICAgICAgIGRhdGVPZkJpcnRoOiB0aGlzLnBhdGllbnQuZGF0ZU9mQmlydGgsCiAgICAgICAgICAgICAgYWRkcmVzczogdGhpcy5wYXRpZW50LmFkZHJlc3MsCiAgICAgICAgICAgIH0pCiAgICAgICAgICAgIC50aGVuKCgpID0+IHRoaXMuJGVtaXQoInJlZnJlc2giKSk7CiAgICAgIH0KICAgIH0sCiAgfSwKICBjb21wdXRlZDogewogICAgaXNOZXc6IGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuICF0aGlzLnBhdGllbnQuaWQ7CiAgICB9LAogIH0sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHJvbGVzOiBbIlNlY3JldGFyeSIsICJEb2N0b3IiLCAiQWRtaW4iXSwKICAgIH0KICB9LAogIHdhdGNoOnsKICAgIG9wZW5lZDogYXN5bmMgZnVuY3Rpb24gKG5ld1ZhbCwgb2xkVmFsKSB7CiAgICAgIGlmIChuZXdWYWwgJiYgIW9sZFZhbCkKICAgICAgICB0aGlzLnBhdGllbnQgPSBhd2FpdCBhcGkucGF0aWVudHMuZ2V0RnVsbFBhdGllbnQoewogICAgICAgICAgaWQ6IHRoaXMucGF0aWVudC5pZAogICAgICAgIH0pOwogICAgfQogIH0KfTsK"},{"version":3,"sources":["PatientDialog.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"PatientDialog.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <v-dialog\n      transition=\"dialog-bottom-transition\"\n      max-width=\"600\"\n      :value=\"opened\"\n  >\n    <template>\n      <v-card>\n        <v-toolbar color=\"primary\" dark>\n          {{ isNew ? \"Create patient\" : \"Edit patient\" }}\n        </v-toolbar>\n        <v-form >\n          <v-text-field v-model=\"patient.firstName\" label=\"First Name\" />\n          <v-text-field v-model=\"patient.lastName\" label=\"Last Name\" />\n          <v-text-field v-model=\"patient.email\" label=\"Email\" />\n          <v-text-field v-model=\"patient.cnp\" label=\"CNP\" />\n          <v-text-field v-model=\"patient.dateOfBirth\" label=\"Date of Birth\" />\n          <v-text-field v-model=\"patient.address\" label=\"Address\" />\n        </v-form>\n        <v-card-actions>\n          <v-btn @click=\"persist\">\n            {{ isNew ? \"Create\" : \"Save\" }}\n          </v-btn>\n          <v-btn @click=\"delet\">\n            Delete\n          </v-btn>\n        </v-card-actions>\n      </v-card>\n    </template>\n  </v-dialog>\n</template>\n\n<script>\nimport api from \"../api\";\nexport default {\n  name: \"PatientDialog\",\n  props: {\n    patient: Object,\n    opened: Boolean,\n  },\n  methods: {\n    delet(){\n      api.patients.delete({\n        id: this.patient.id,\n      }).then(() => this.$emit(\"refresh\"));\n    },\n    persist() {\n      if (this.isNew) {\n        api.patients\n            .create({\n              firstName: this.patient.firstName,\n              lastName: this.patient.lastName,\n              email: this.patient.email,\n              cnp: this.patient.cnp,\n              dateOfBirth: this.patient.dateOfBirth,\n              address: this.patient.address,\n            })\n            .then(() => this.$emit(\"refresh\"));\n      } else {\n        api.patients\n            .edit({\n              id: this.patient.id,\n              firstName: this.patient.firstName,\n              lastName: this.patient.lastName,\n              email: this.patient.email,\n              cnp: this.patient.cnp,\n              dateOfBirth: this.patient.dateOfBirth,\n              address: this.patient.address,\n            })\n            .then(() => this.$emit(\"refresh\"));\n      }\n    },\n  },\n  computed: {\n    isNew: function () {\n      return !this.patient.id;\n    },\n  },\n  data() {\n    return {\n      roles: [\"Secretary\", \"Doctor\", \"Admin\"],\n    }\n  },\n  watch:{\n    opened: async function (newVal, oldVal) {\n      if (newVal && !oldVal)\n        this.patient = await api.patients.getFullPatient({\n          id: this.patient.id\n        });\n    }\n  }\n};\n</script>\n\n<style scoped></style>\n"]}]}