{"remainingRequest":"/home/tmst/an3sem2/sd/final-project-luaRRaul/stockhelt/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/tmst/an3sem2/sd/final-project-luaRRaul/stockhelt/frontend/src/components/DoctorTextDialog.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/tmst/an3sem2/sd/final-project-luaRRaul/stockhelt/frontend/src/components/DoctorTextDialog.vue","mtime":1622567563940},{"path":"/home/tmst/an3sem2/sd/final-project-luaRRaul/stockhelt/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/tmst/an3sem2/sd/final-project-luaRRaul/stockhelt/frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/tmst/an3sem2/sd/final-project-luaRRaul/stockhelt/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/tmst/an3sem2/sd/final-project-luaRRaul/stockhelt/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBTb2NrSlMgZnJvbSAic29ja2pzLWNsaWVudCI7CmltcG9ydCBTdG9tcCBmcm9tICJ3ZWJzdG9tcC1jbGllbnQiOwppbXBvcnQgQ2hhdENvbnRhaW5lciBmcm9tICJAL2NvbXBvbmVudHMvQ2hhdENvbnRhaW5lciI7CgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIkRvY3RvclRleHREaWFsb2ciLAogIGNvbXBvbmVudHM6ewogICAgQ2hhdENvbnRhaW5lcgogIH0sCiAgZGF0YSgpewogICAgcmV0dXJuIHsKICAgICAgc2VuZF9tZXNzYWdlOiBudWxsLAogICAgICBjb25uZWN0ZWQ6IGZhbHNlLAogICAgICAvLyByb2xlczogWyJTZWNyZXRhcnkiLCAiRG9jdG9yIiwgIkFkbWluIl0sCiAgICB9CiAgfSwKICBwcm9wczogewogICAgcGF0aWVudDogT2JqZWN0LAogICAgb3BlbmVkOiBCb29sZWFuLAogIH0sCiAgbWV0aG9kczogewogICAgc2VuZCgpIHsKICAgICAgY29uc29sZS5sb2coIlNlbmQgbWVzc2FnZToiICsgdGhpcy5zZW5kX21lc3NhZ2UpOwogICAgICBpZiAodGhpcy5zdG9tcENsaWVudCAmJiB0aGlzLnN0b21wQ2xpZW50LmNvbm5lY3RlZCkgewogICAgICAgIHRoaXMuc2VuZF9tZXNzYWdlID0gewogICAgICAgICAgdHlwZSA6ICJNU0ciLAogICAgICAgICAgY29udGVudDogIkhlbGxvdyBXb3JsZCEiLAogICAgICAgICAgc2VuZGVyOiB0aGlzLiRzdG9yZS5zdGF0ZS5hdXRoLnVzZXIuaWQKICAgICAgICB9OwogICAgICAgIGNvbnNvbGUubG9nKEpTT04uc3RyaW5naWZ5KHRoaXMuc2VuZF9tZXNzYWdlKSk7CiAgICAgICAgdGhpcy5zdG9tcENsaWVudC5zZW5kKCIvYXBpL2NoYXQvdG9waWMvIit0aGlzLnBhdGllbnQuaWQsIEpTT04uc3RyaW5naWZ5KHRoaXMuc2VuZF9tZXNzYWdlKSx7fSk7CiAgICAgIH0KICAgIH0sCiAgICBjb25uZWN0KCkgewogICAgICB0aGlzLnNvY2tldCA9IG5ldyBTb2NrSlMoImh0dHA6Ly9sb2NhbGhvc3Q6ODA4OC9hcGkvbXktd2Vic29ja2V0Iik7CiAgICAgIHRoaXMuc3RvbXBDbGllbnQgPSBTdG9tcC5vdmVyKHRoaXMuc29ja2V0KTsKICAgICAgdGhpcy5zdG9tcENsaWVudC5jb25uZWN0KAogICAgICAgICAge30sCiAgICAgICAgICBmcmFtZSA9PiB7CiAgICAgICAgICAgIHRoaXMuY29ubmVjdGVkID0gdHJ1ZTsKICAgICAgICAgICAgY29uc29sZS5sb2coZnJhbWUpOwogICAgICAgICAgICB0aGlzLnN0b21wQ2xpZW50LnN1YnNjcmliZSgiL2FwaS90b3BpYy9tZXNzYWdlcy8iK3RoaXMuJHN0b3JlLnN0YXRlLmF1dGgudXNlci5pZCxmdW5jdGlvbiAocmVzcG9uc2UpewogICAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlc3BvbnNlKTsKICAgICAgICAgICAgICBsZXQgZGF0YSA9IEpTT04ucGFyc2UocmVzcG9uc2UuYm9keSk7CiAgICAgICAgICAgICAgY29uc29sZS5sb2coZGF0YSk7CiAgICAgICAgICAgIH0pOwogICAgICAgICAgfSwKICAgICAgICAgIGVycm9yID0+IHsKICAgICAgICAgICAgY29uc29sZS5sb2coZXJyb3IpOwogICAgICAgICAgICB0aGlzLmNvbm5lY3RlZCA9IGZhbHNlOwogICAgICAgICAgfQogICAgICApOwogICAgfSwKICB9LAogIGNvbXB1dGVkOiB7CiAgICBpc05ldzogZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gIXRoaXMucGF0aWVudC5pZDsKICAgIH0sCiAgfSwKICB3YXRjaDp7CiAgICBvcGVuZWQ6IGFzeW5jIGZ1bmN0aW9uIChuZXdWYWwsIG9sZFZhbCkgewogICAgICBpZiAobmV3VmFsICYmICFvbGRWYWwpIHsKICAgICAgICB0aGlzLmNvbm5lY3QoKTsKICAgICAgfQogICAgfQogIH0sCiAgbW91bnRlZCgpIHsKICAgIHRoaXMuJHJvb3QuJG9uKCdkb2N0b3JTZW5kTWVzc2FnZScsIChtZXNzYWcpID0+IHsKICAgICAgLy8geW91ciBjb2RlIGdvZXMgaGVyZQogICAgICB0aGlzLnNlbmQobWVzc2FnKQogICAgfSkKICB9Cn07Cg=="},{"version":3,"sources":["DoctorTextDialog.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"DoctorTextDialog.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <v-dialog\n      transition=\"dialog-bottom-transition\"\n      max-width=\"600\"\n      :value=\"opened\"\n  >\n    <template>\n      <div class=\"message-input\">\n        <textarea\n            ref=\"messageInput\"\n            placeholder=\"message...\"\n            maxlength=\"20000\"\n            @keydown.enter=\"submitMessage\"\n        ></textarea>\n      </div>\n    </template>\n\n\n    <template>\n\n      <v-btn @click=\"send\">\n        Send\n      </v-btn>\n    </template>\n  </v-dialog>\n</template>\n\n<script>\nimport SockJS from \"sockjs-client\";\nimport Stomp from \"webstomp-client\";\nimport ChatContainer from \"@/components/ChatContainer\";\n\nexport default {\n  name: \"DoctorTextDialog\",\n  components:{\n    ChatContainer\n  },\n  data(){\n    return {\n      send_message: null,\n      connected: false,\n      // roles: [\"Secretary\", \"Doctor\", \"Admin\"],\n    }\n  },\n  props: {\n    patient: Object,\n    opened: Boolean,\n  },\n  methods: {\n    send() {\n      console.log(\"Send message:\" + this.send_message);\n      if (this.stompClient && this.stompClient.connected) {\n        this.send_message = {\n          type : \"MSG\",\n          content: \"Hellow World!\",\n          sender: this.$store.state.auth.user.id\n        };\n        console.log(JSON.stringify(this.send_message));\n        this.stompClient.send(\"/api/chat/topic/\"+this.patient.id, JSON.stringify(this.send_message),{});\n      }\n    },\n    connect() {\n      this.socket = new SockJS(\"http://localhost:8088/api/my-websocket\");\n      this.stompClient = Stomp.over(this.socket);\n      this.stompClient.connect(\n          {},\n          frame => {\n            this.connected = true;\n            console.log(frame);\n            this.stompClient.subscribe(\"/api/topic/messages/\"+this.$store.state.auth.user.id,function (response){\n              console.log(response);\n              let data = JSON.parse(response.body);\n              console.log(data);\n            });\n          },\n          error => {\n            console.log(error);\n            this.connected = false;\n          }\n      );\n    },\n  },\n  computed: {\n    isNew: function () {\n      return !this.patient.id;\n    },\n  },\n  watch:{\n    opened: async function (newVal, oldVal) {\n      if (newVal && !oldVal) {\n        this.connect();\n      }\n    }\n  },\n  mounted() {\n    this.$root.$on('doctorSendMessage', (messag) => {\n      // your code goes here\n      this.send(messag)\n    })\n  }\n};\n</script>\n\n<style scoped></style>\n"]}]}