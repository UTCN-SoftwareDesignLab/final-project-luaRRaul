{"remainingRequest":"/home/tmst/an3sem2/sd/final-project-luaRRaul/stockhelt/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/tmst/an3sem2/sd/final-project-luaRRaul/stockhelt/frontend/src/components/PatientTextDialog.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/tmst/an3sem2/sd/final-project-luaRRaul/stockhelt/frontend/src/components/PatientTextDialog.vue","mtime":1622567563960},{"path":"/home/tmst/an3sem2/sd/final-project-luaRRaul/stockhelt/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/tmst/an3sem2/sd/final-project-luaRRaul/stockhelt/frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/tmst/an3sem2/sd/final-project-luaRRaul/stockhelt/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/tmst/an3sem2/sd/final-project-luaRRaul/stockhelt/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBTb2NrSlMgZnJvbSAic29ja2pzLWNsaWVudCI7CmltcG9ydCBTdG9tcCBmcm9tICJ3ZWJzdG9tcC1jbGllbnQiOwppbXBvcnQgQ2hhdENvbnRhaW5lciBmcm9tICJAL2NvbXBvbmVudHMvQ2hhdENvbnRhaW5lciI7CgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIlBhdGllbnRUZXh0RGlhbG9nIiwKICBjb21wb25lbnRzOntDaGF0Q29udGFpbmVyfSwKICBkYXRhKCl7CiAgICByZXR1cm4gewogICAgICBzZW5kX21lc3NhZ2U6IG51bGwsCiAgICAgIGNvbm5lY3RlZDogZmFsc2UsCiAgICB9CiAgfSwKICBwcm9wczogewogICAgZG9jdG9yOiBPYmplY3QsCiAgICBvcGVuZWQ6IEJvb2xlYW4sCiAgfSwKICBtZXRob2RzOiB7CiAgICBzZW5kKG1lc3NhZykgewogICAgICBjb25zb2xlLmxvZygiU2VuZCBtZXNzYWdlOiIgKyB0aGlzLnNlbmRfbWVzc2FnZSk7CiAgICAgIGlmICh0aGlzLnN0b21wQ2xpZW50ICYmIHRoaXMuc3RvbXBDbGllbnQuY29ubmVjdGVkKSB7CiAgICAgICAgdGhpcy5zZW5kX21lc3NhZ2UgPSB7CiAgICAgICAgICB0eXBlIDogIk1TRyIsCiAgICAgICAgICBjb250ZW50OiBtZXNzYWcsCiAgICAgICAgICBzZW5kZXI6IHRoaXMuJHN0b3JlLnN0YXRlLmF1dGgudXNlci5pZAogICAgICAgIH07CiAgICAgICAgY29uc29sZS5sb2coSlNPTi5zdHJpbmdpZnkodGhpcy5zZW5kX21lc3NhZ2UpKTsKICAgICAgICB0aGlzLnN0b21wQ2xpZW50LnNlbmQoIi9hcGkvY2hhdC90b3BpYy8iK3RoaXMuZG9jdG9yLmlkLCBKU09OLnN0cmluZ2lmeSh0aGlzLnNlbmRfbWVzc2FnZSkse30pOwogICAgICB9CiAgICB9LAogICAgY29ubmVjdCgpIHsKICAgICAgdGhpcy5zb2NrZXQgPSBuZXcgU29ja0pTKCJodHRwOi8vbG9jYWxob3N0OjgwODgvYXBpL215LXdlYnNvY2tldCIpOwogICAgICB0aGlzLnN0b21wQ2xpZW50ID0gU3RvbXAub3Zlcih0aGlzLnNvY2tldCk7CiAgICAgIHRoaXMuc3RvbXBDbGllbnQuY29ubmVjdCgKICAgICAgICAgIHt9LAogICAgICAgICAgZnJhbWUgPT4gewogICAgICAgICAgICB0aGlzLmNvbm5lY3RlZCA9IHRydWU7CiAgICAgICAgICAgIGNvbnNvbGUubG9nKGZyYW1lKTsKICAgICAgICAgICAgdGhpcy5zdG9tcENsaWVudC5zdWJzY3JpYmUoIi9hcGkvdG9waWMvbWVzc2FnZXMvIit0aGlzLiRzdG9yZS5zdGF0ZS5hdXRoLnVzZXIuaWQsZnVuY3Rpb24gKHJlc3BvbnNlKXsKICAgICAgICAgICAgICBsZXQgZGF0YSA9IEpTT04ucGFyc2UocmVzcG9uc2UuYm9keSk7CiAgICAgICAgICAgICAgdGhpcy4kcm9vdC4kZW1pdCgicGF0aWVudFJlY2VpdmVkTWVzc2FnZSIsZGF0YSk7CiAgICAgICAgICAgICAgY29uc29sZS5sb2coZGF0YSk7CiAgICAgICAgICAgIH0pOwogICAgICAgICAgfSwKICAgICAgICAgIGVycm9yID0+IHsKICAgICAgICAgICAgY29uc29sZS5sb2coZXJyb3IpOwogICAgICAgICAgICB0aGlzLmNvbm5lY3RlZCA9IGZhbHNlOwogICAgICAgICAgfQogICAgICApOwogICAgfSwKICB9LAogIGNvbXB1dGVkOiB7CiAgICBpc05ldzogZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gIXRoaXMuZG9jdG9yLmlkOwogICAgfSwKICB9LAogIHdhdGNoOnsKICAgIG9wZW5lZDogYXN5bmMgZnVuY3Rpb24gKG5ld1ZhbCwgb2xkVmFsKSB7CiAgICAgIGlmIChuZXdWYWwgJiYgIW9sZFZhbCkgewogICAgICAgIHRoaXMuY29ubmVjdCgpOwogICAgICB9CiAgICB9CiAgfSwKICBtb3VudGVkKCkgewogICAgdGhpcy4kcm9vdC4kb24oJ3BhdGllbnRTZW5kTWVzc2FnZScsIChtZXNzYWcpID0+IHsKICAgICAgLy8geW91ciBjb2RlIGdvZXMgaGVyZQogICAgICB0aGlzLnNlbmQobWVzc2FnKQogICAgfSkKICB9Cn07Cg=="},{"version":3,"sources":["PatientTextDialog.vue"],"names":[],"mappings":";;;;;;;;;;;AAWA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"PatientTextDialog.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <v-dialog\n      transition=\"dialog-bottom-transition\"\n      max-width=\"600\"\n      :value=\"opened\"\n  >\n    <ChatContainer></ChatContainer>\n  </v-dialog>\n</template>\n\n<script>\nimport SockJS from \"sockjs-client\";\nimport Stomp from \"webstomp-client\";\nimport ChatContainer from \"@/components/ChatContainer\";\n\nexport default {\n  name: \"PatientTextDialog\",\n  components:{ChatContainer},\n  data(){\n    return {\n      send_message: null,\n      connected: false,\n    }\n  },\n  props: {\n    doctor: Object,\n    opened: Boolean,\n  },\n  methods: {\n    send(messag) {\n      console.log(\"Send message:\" + this.send_message);\n      if (this.stompClient && this.stompClient.connected) {\n        this.send_message = {\n          type : \"MSG\",\n          content: messag,\n          sender: this.$store.state.auth.user.id\n        };\n        console.log(JSON.stringify(this.send_message));\n        this.stompClient.send(\"/api/chat/topic/\"+this.doctor.id, JSON.stringify(this.send_message),{});\n      }\n    },\n    connect() {\n      this.socket = new SockJS(\"http://localhost:8088/api/my-websocket\");\n      this.stompClient = Stomp.over(this.socket);\n      this.stompClient.connect(\n          {},\n          frame => {\n            this.connected = true;\n            console.log(frame);\n            this.stompClient.subscribe(\"/api/topic/messages/\"+this.$store.state.auth.user.id,function (response){\n              let data = JSON.parse(response.body);\n              this.$root.$emit(\"patientReceivedMessage\",data);\n              console.log(data);\n            });\n          },\n          error => {\n            console.log(error);\n            this.connected = false;\n          }\n      );\n    },\n  },\n  computed: {\n    isNew: function () {\n      return !this.doctor.id;\n    },\n  },\n  watch:{\n    opened: async function (newVal, oldVal) {\n      if (newVal && !oldVal) {\n        this.connect();\n      }\n    }\n  },\n  mounted() {\n    this.$root.$on('patientSendMessage', (messag) => {\n      // your code goes here\n      this.send(messag)\n    })\n  }\n};\n</script>\n\n<style scoped></style>\n"]}]}